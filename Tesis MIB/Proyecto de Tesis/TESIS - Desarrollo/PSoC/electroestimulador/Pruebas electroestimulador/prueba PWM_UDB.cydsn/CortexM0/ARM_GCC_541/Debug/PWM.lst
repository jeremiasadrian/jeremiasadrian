ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Enable, %function
  25              	PWM_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM.c **** *
  15:Generated_Source\PSoC4/PWM.c **** * Note:
  16:Generated_Source\PSoC4/PWM.c **** *
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:Generated_Source\PSoC4/PWM.c **** 
  26:Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 2


  31:Generated_Source\PSoC4/PWM.c **** 
  32:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  33:Generated_Source\PSoC4/PWM.c **** 
  34:Generated_Source\PSoC4/PWM.c **** 
  35:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM.c **** *
  39:Generated_Source\PSoC4/PWM.c **** * Summary:
  40:Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM.c **** *
  44:Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM.c **** *  None
  46:Generated_Source\PSoC4/PWM.c **** *
  47:Generated_Source\PSoC4/PWM.c **** * Return:
  48:Generated_Source\PSoC4/PWM.c **** *  None
  49:Generated_Source\PSoC4/PWM.c **** *
  50:Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM.c **** *
  54:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:Generated_Source\PSoC4/PWM.c **** {
  57:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:Generated_Source\PSoC4/PWM.c ****     {
  60:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:Generated_Source\PSoC4/PWM.c ****     }
  63:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:Generated_Source\PSoC4/PWM.c **** 
  65:Generated_Source\PSoC4/PWM.c **** }
  66:Generated_Source\PSoC4/PWM.c **** 
  67:Generated_Source\PSoC4/PWM.c **** 
  68:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM.c **** *
  72:Generated_Source\PSoC4/PWM.c **** * Summary:
  73:Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:Generated_Source\PSoC4/PWM.c **** *
  77:Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM.c **** *  None
  79:Generated_Source\PSoC4/PWM.c **** *
  80:Generated_Source\PSoC4/PWM.c **** * Return:
  81:Generated_Source\PSoC4/PWM.c **** *  None
  82:Generated_Source\PSoC4/PWM.c **** *
  83:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:Generated_Source\PSoC4/PWM.c **** {
  86:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:Generated_Source\PSoC4/PWM.c **** 
  90:Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM.c **** 
  97:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM.c **** 
 104:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM.c **** 
 123:Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM.c **** 
 133:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM.c **** 
 138:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM.c ****         #else
 141:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 4


 145:Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM.c **** 
 153:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM.c **** 
 157:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM.c ****     #else
 163:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:Generated_Source\PSoC4/PWM.c **** 
 165:Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM.c **** 
 171:Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:Generated_Source\PSoC4/PWM.c **** 
 174:Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM.c **** }
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c **** 
 182:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM.c **** *
 186:Generated_Source\PSoC4/PWM.c **** * Summary:
 187:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM.c **** *
 189:Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM.c **** *  None
 191:Generated_Source\PSoC4/PWM.c **** *
 192:Generated_Source\PSoC4/PWM.c **** * Return:
 193:Generated_Source\PSoC4/PWM.c **** *  None
 194:Generated_Source\PSoC4/PWM.c **** *
 195:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM.c **** *
 198:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:Generated_Source\PSoC4/PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM.c **** 
 207:Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 73000F40 		.word	1074724979
  48              		.cfi_endproc
  49              	.LFE2:
  50              		.size	PWM_Enable, .-PWM_Enable
  51              		.section	.text.PWM_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	PWM_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	PWM_Stop, %function
  57              	PWM_Stop:
  58              	.LFB3:
 212:Generated_Source\PSoC4/PWM.c **** 
 213:Generated_Source\PSoC4/PWM.c **** 
 214:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM.c **** *
 218:Generated_Source\PSoC4/PWM.c **** * Summary:
 219:Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM.c **** *  None
 224:Generated_Source\PSoC4/PWM.c **** *
 225:Generated_Source\PSoC4/PWM.c **** * Return:
 226:Generated_Source\PSoC4/PWM.c **** *  None
 227:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 6


 228:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM.c **** *
 232:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:Generated_Source\PSoC4/PWM.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM.c **** 
 239:Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 73000F40 		.word	1074724979
  77              		.cfi_endproc
  78              	.LFE3:
  79              		.size	PWM_Stop, .-PWM_Stop
  80              		.section	.text.PWM_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	PWM_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWM_WriteCounter, %function
  86              	PWM_WriteCounter:
  87              	.LFB4:
 245:Generated_Source\PSoC4/PWM.c **** 
 246:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM.c **** 
 249:Generated_Source\PSoC4/PWM.c **** 
 250:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM.c ****         *
 254:Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 7


 256:Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM.c ****         *
 258:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM.c ****         *
 262:Generated_Source\PSoC4/PWM.c ****         * Return:
 263:Generated_Source\PSoC4/PWM.c ****         *  None
 264:Generated_Source\PSoC4/PWM.c ****         *
 265:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM.c ****         {
 268:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM.c **** 
 270:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/PWM.c ****                 #else
 273:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM.c **** 
 276:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM.c **** 
 279:Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:Generated_Source\PSoC4/PWM.c **** 
 281:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM.c ****                 #else
 285:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM.c **** 
 288:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM.c ****                 #else
 292:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM.c **** 
 295:Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM.c **** 
 300:Generated_Source\PSoC4/PWM.c ****             #else
 301:Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM.c ****         }
 304:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM.c **** 
 308:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM.c **** 
 310:Generated_Source\PSoC4/PWM.c **** 
 311:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 8


 313:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM.c ****         *
 315:Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM.c ****         *
 318:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM.c ****         *
 322:Generated_Source\PSoC4/PWM.c ****         * Return:
 323:Generated_Source\PSoC4/PWM.c ****         *  None
 324:Generated_Source\PSoC4/PWM.c ****         *
 325:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM.c ****         {
 328:Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM.c ****             #else
 332:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:Generated_Source\PSoC4/PWM.c ****         }
 340:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM.c **** 
 342:Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM.c **** 
 344:Generated_Source\PSoC4/PWM.c **** 
 345:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM.c ****     *
 349:Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM.c ****     *
 352:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM.c ****     *
 356:Generated_Source\PSoC4/PWM.c ****     * Return:
 357:Generated_Source\PSoC4/PWM.c ****     *  None
 358:Generated_Source\PSoC4/PWM.c ****     *
 359:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM.c ****     {
 362:Generated_Source\PSoC4/PWM.c **** 
 363:Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM.c ****         #else
 367:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 9


 370:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:Generated_Source\PSoC4/PWM.c ****     }
 375:Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM.c **** 
 377:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM.c **** 
 379:Generated_Source\PSoC4/PWM.c **** 
 380:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM.c **** 
 382:Generated_Source\PSoC4/PWM.c **** 
 383:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM.c ****     *
 387:Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM.c ****     *
 393:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM.c ****     *
 396:Generated_Source\PSoC4/PWM.c ****     * Return:
 397:Generated_Source\PSoC4/PWM.c ****     *  None
 398:Generated_Source\PSoC4/PWM.c ****     *
 399:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM.c ****     *
 402:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/PWM.c ****                                        
 405:Generated_Source\PSoC4/PWM.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1880     		strh	r0, [r3]
 407:Generated_Source\PSoC4/PWM.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 04100F40 		.word	1074728964
 104              		.cfi_endproc
 105              	.LFE4:
 106              		.size	PWM_WriteCounter, .-PWM_WriteCounter
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 10


 107              		.section	.text.PWM_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	PWM_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	PWM_ReadCounter, %function
 113              	PWM_ReadCounter:
 114              	.LFB5:
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** 
 410:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM.c ****     *
 414:Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM.c ****     *
 418:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM.c ****     *  None
 420:Generated_Source\PSoC4/PWM.c ****     *
 421:Generated_Source\PSoC4/PWM.c ****     * Return:
 422:Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM.c ****     *
 424:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM.c **** 
 432:Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1888     		ldrh	r0, [r3]
 126 0008 80B2     		uxth	r0, r0
 434:Generated_Source\PSoC4/PWM.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 12000F40 		.word	1074724882
 134 0010 A4100F40 		.word	1074729124
 135              		.cfi_endproc
 136              	.LFE5:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 11


 137              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 138              		.section	.text.PWM_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	PWM_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	PWM_WritePeriod, %function
 144              	PWM_WritePeriod:
 145              	.LFB7:
 435:Generated_Source\PSoC4/PWM.c **** 
 436:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:Generated_Source\PSoC4/PWM.c **** 
 438:Generated_Source\PSoC4/PWM.c **** 
 439:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM.c ****         *
 443:Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM.c ****         *
 446:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM.c ****         *  None
 448:Generated_Source\PSoC4/PWM.c ****         *
 449:Generated_Source\PSoC4/PWM.c ****         * Return:
 450:Generated_Source\PSoC4/PWM.c ****         *  None
 451:Generated_Source\PSoC4/PWM.c ****         *
 452:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM.c ****         {
 455:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM.c ****             {
 457:Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:Generated_Source\PSoC4/PWM.c ****             }
 459:Generated_Source\PSoC4/PWM.c ****         }
 460:Generated_Source\PSoC4/PWM.c **** 
 461:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:Generated_Source\PSoC4/PWM.c **** 
 463:Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM.c **** 
 465:Generated_Source\PSoC4/PWM.c **** 
 466:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM.c **** *
 470:Generated_Source\PSoC4/PWM.c **** * Summary:
 471:Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM.c **** *
 474:Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM.c **** *
 478:Generated_Source\PSoC4/PWM.c **** * Return:
 479:Generated_Source\PSoC4/PWM.c **** *  None
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint16 period) 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 12


 483:Generated_Source\PSoC4/PWM.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM.c ****     #else
 487:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1880     		strh	r0, [r3]
 488:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 84100F40 		.word	1074729092
 162              		.cfi_endproc
 163              	.LFE7:
 164              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 165              		.section	.text.PWM_WriteCompare,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_WriteCompare
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_WriteCompare, %function
 171              	PWM_WriteCompare:
 172              	.LFB8:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM.c **** 
 493:Generated_Source\PSoC4/PWM.c **** 
 494:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM.c ****     *
 498:Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM.c ****     *
 505:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM.c ****     *
 508:Generated_Source\PSoC4/PWM.c ****     * Return:
 509:Generated_Source\PSoC4/PWM.c ****     *  None
 510:Generated_Source\PSoC4/PWM.c ****     *
 511:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 13


 513:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM.c ****     *
 515:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/PWM.c ****                                        
 518:Generated_Source\PSoC4/PWM.c ****     {
 173              		.loc 1 518 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 519:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM.c ****         #else
 522:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 522 0
 180 0000 014B     		ldr	r3, .L17
 181 0002 1880     		strh	r0, [r3]
 523:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM.c ****             #else
 529:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM.c ****     }
 182              		.loc 1 532 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 44100F40 		.word	1074729028
 189              		.cfi_endproc
 190              	.LFE8:
 191              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 192              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_SetInterruptMode
 195              		.code	16
 196              		.thumb_func
 197              		.type	PWM_SetInterruptMode, %function
 198              	PWM_SetInterruptMode:
 199              	.LFB9:
 533:Generated_Source\PSoC4/PWM.c **** 
 534:Generated_Source\PSoC4/PWM.c **** 
 535:Generated_Source\PSoC4/PWM.c **** #else
 536:Generated_Source\PSoC4/PWM.c **** 
 537:Generated_Source\PSoC4/PWM.c **** 
 538:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM.c ****     *
 542:Generated_Source\PSoC4/PWM.c ****     * Summary:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 14


 543:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM.c ****     *
 548:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM.c ****     *
 551:Generated_Source\PSoC4/PWM.c ****     * Return:
 552:Generated_Source\PSoC4/PWM.c ****     *  None
 553:Generated_Source\PSoC4/PWM.c ****     *
 554:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/PWM.c ****                                         
 557:Generated_Source\PSoC4/PWM.c ****     {
 558:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM.c ****         #else
 561:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM.c ****     }
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c ****     *
 570:Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM.c ****     *
 577:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM.c ****     *
 580:Generated_Source\PSoC4/PWM.c ****     * Return:
 581:Generated_Source\PSoC4/PWM.c ****     *  None
 582:Generated_Source\PSoC4/PWM.c ****     *
 583:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/PWM.c ****                                         
 586:Generated_Source\PSoC4/PWM.c ****     {
 587:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM.c ****         #else
 590:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM.c ****     }
 593:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM.c **** 
 595:Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 15


 600:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM.c ****     *
 602:Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM.c ****     *
 605:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM.c ****     *
 608:Generated_Source\PSoC4/PWM.c ****     * Return:
 609:Generated_Source\PSoC4/PWM.c ****     *  None
 610:Generated_Source\PSoC4/PWM.c ****     *
 611:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM.c ****     {
 614:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM.c ****         #else
 618:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM.c **** 
 622:Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM.c ****             #else
 627:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM.c **** 
 630:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM.c ****     }
 632:Generated_Source\PSoC4/PWM.c **** 
 633:Generated_Source\PSoC4/PWM.c **** 
 634:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM.c ****     *
 638:Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM.c ****     *
 641:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM.c ****     *  None
 643:Generated_Source\PSoC4/PWM.c ****     *
 644:Generated_Source\PSoC4/PWM.c ****     * Return:
 645:Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM.c ****     *
 647:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM.c ****     {
 650:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM.c ****         #else
 654:Generated_Source\PSoC4/PWM.c **** 
 655:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 16


 657:Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/PWM.c ****             #else
 660:Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM.c ****     }
 664:Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM.c **** 
 666:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c **** 
 669:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM.c ****     *
 673:Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM.c ****     *
 677:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM.c ****     *
 680:Generated_Source\PSoC4/PWM.c ****     * Return:
 681:Generated_Source\PSoC4/PWM.c ****     *  None
 682:Generated_Source\PSoC4/PWM.c ****     *
 683:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM.c ****     {
 200              		.loc 1 685 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL3:
 686:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 206              		.loc 1 686 0
 207 0000 014B     		ldr	r3, .L20
 208 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/PWM.c ****     }
 209              		.loc 1 687 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L21:
 213 0006 C046     		.align	2
 214              	.L20:
 215 0008 83000F40 		.word	1074724995
 216              		.cfi_endproc
 217              	.LFE9:
 218              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 219              		.section	.text.PWM_ReadStatusRegister,"ax",%progbits
 220              		.align	2
 221              		.global	PWM_ReadStatusRegister
 222              		.code	16
 223              		.thumb_func
 224              		.type	PWM_ReadStatusRegister, %function
 225              	PWM_ReadStatusRegister:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 17


 226              	.LFB10:
 688:Generated_Source\PSoC4/PWM.c **** 
 689:Generated_Source\PSoC4/PWM.c **** 
 690:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM.c ****     *
 694:Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM.c ****     *
 697:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM.c ****     *  None
 699:Generated_Source\PSoC4/PWM.c ****     *
 700:Generated_Source\PSoC4/PWM.c ****     * Return:
 701:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM.c ****     *
 710:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM.c ****     {
 227              		.loc 1 712 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 713:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 232              		.loc 1 713 0
 233 0000 014B     		ldr	r3, .L23
 234 0002 1878     		ldrb	r0, [r3]
 235 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/PWM.c ****     }
 236              		.loc 1 714 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L24:
 240              		.align	2
 241              	.L23:
 242 0008 63000F40 		.word	1074724963
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	PWM_ReadStatusRegister, .-PWM_ReadStatusRegister
 246              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_ReadControlRegister
 249              		.code	16
 250              		.thumb_func
 251              		.type	PWM_ReadControlRegister, %function
 252              	PWM_ReadControlRegister:
 253              	.LFB11:
 715:Generated_Source\PSoC4/PWM.c **** 
 716:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 18


 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:Generated_Source\PSoC4/PWM.c **** 
 721:Generated_Source\PSoC4/PWM.c **** 
 722:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM.c ****     *
 726:Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM.c ****     *
 730:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM.c ****     *  None
 732:Generated_Source\PSoC4/PWM.c ****     *
 733:Generated_Source\PSoC4/PWM.c ****     * Return:
 734:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM.c ****     *
 736:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM.c ****     {
 254              		.loc 1 738 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 739:Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM.c **** 
 741:Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 259              		.loc 1 741 0
 260 0000 014B     		ldr	r3, .L26
 261 0002 1878     		ldrb	r0, [r3]
 262 0004 C0B2     		uxtb	r0, r0
 263              	.LVL4:
 742:Generated_Source\PSoC4/PWM.c ****         return (result);
 743:Generated_Source\PSoC4/PWM.c ****     }
 264              		.loc 1 743 0
 265              		@ sp needed
 266 0006 7047     		bx	lr
 267              	.L27:
 268              		.align	2
 269              	.L26:
 270 0008 73000F40 		.word	1074724979
 271              		.cfi_endproc
 272              	.LFE11:
 273              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 274              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 275              		.align	2
 276              		.global	PWM_WriteControlRegister
 277              		.code	16
 278              		.thumb_func
 279              		.type	PWM_WriteControlRegister, %function
 280              	PWM_WriteControlRegister:
 281              	.LFB12:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 19


 746:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM.c ****     *
 750:Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM.c ****     *
 754:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM.c ****     *
 761:Generated_Source\PSoC4/PWM.c ****     * Return:
 762:Generated_Source\PSoC4/PWM.c ****     *  None
 763:Generated_Source\PSoC4/PWM.c ****     *
 764:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM.c ****     {
 282              		.loc 1 766 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL5:
 767:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 288              		.loc 1 767 0
 289 0000 014B     		ldr	r3, .L29
 290 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM.c ****     }
 291              		.loc 1 768 0
 292              		@ sp needed
 293 0004 7047     		bx	lr
 294              	.L30:
 295 0006 C046     		.align	2
 296              	.L29:
 297 0008 73000F40 		.word	1074724979
 298              		.cfi_endproc
 299              	.LFE12:
 300              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 301              		.section	.text.PWM_ReadCapture,"ax",%progbits
 302              		.align	2
 303              		.global	PWM_ReadCapture
 304              		.code	16
 305              		.thumb_func
 306              		.type	PWM_ReadCapture, %function
 307              	PWM_ReadCapture:
 308              	.LFB13:
 769:Generated_Source\PSoC4/PWM.c **** 
 770:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** 
 773:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM.c **** 
 775:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 20


 776:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM.c ****     *
 780:Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM.c ****     *
 783:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM.c ****     *  None
 785:Generated_Source\PSoC4/PWM.c ****     *
 786:Generated_Source\PSoC4/PWM.c ****     * Return:
 787:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM.c ****     *
 789:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM.c ****     {
 309              		.loc 1 791 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 792:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 314              		.loc 1 792 0
 315 0000 014B     		ldr	r3, .L32
 316 0002 1888     		ldrh	r0, [r3]
 317 0004 80B2     		uxth	r0, r0
 793:Generated_Source\PSoC4/PWM.c ****     }
 318              		.loc 1 793 0
 319              		@ sp needed
 320 0006 7047     		bx	lr
 321              	.L33:
 322              		.align	2
 323              	.L32:
 324 0008 A4100F40 		.word	1074729124
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 328              		.section	.text.PWM_ClearFIFO,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_ClearFIFO
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_ClearFIFO, %function
 334              	PWM_ClearFIFO:
 335              	.LFB6:
 454:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 336              		.loc 1 454 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/PWM.c ****             {
 344              		.loc 1 455 0
 345 0002 01E0     		b	.L35
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 21


 346              	.L36:
 457:Generated_Source\PSoC4/PWM.c ****             }
 347              		.loc 1 457 0
 348 0004 FFF7FEFF 		bl	PWM_ReadCapture
 349              	.LVL6:
 350              	.L35:
 455:Generated_Source\PSoC4/PWM.c ****             {
 351              		.loc 1 455 0
 352 0008 FFF7FEFF 		bl	PWM_ReadStatusRegister
 353              	.LVL7:
 354 000c C306     		lsls	r3, r0, #27
 355 000e F9D4     		bmi	.L36
 459:Generated_Source\PSoC4/PWM.c **** 
 356              		.loc 1 459 0
 357              		@ sp needed
 358 0010 10BD     		pop	{r4, pc}
 359              		.cfi_endproc
 360              	.LFE6:
 361              		.size	PWM_ClearFIFO, .-PWM_ClearFIFO
 362 0012 C046     		.section	.text.PWM_Init,"ax",%progbits
 363              		.align	2
 364              		.global	PWM_Init
 365              		.code	16
 366              		.thumb_func
 367              		.type	PWM_Init, %function
 368              	PWM_Init:
 369              	.LFB1:
  85:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 370              		.loc 1 85 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 70B5     		push	{r4, r5, r6, lr}
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 4, -16
 377              		.cfi_offset 5, -12
 378              		.cfi_offset 6, -8
 379              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 380              		.loc 1 117 0
 381 0002 1649     		ldr	r1, .L38
 382 0004 0B78     		ldrb	r3, [r1]
 383 0006 3F22     		movs	r2, #63
 384 0008 9343     		bics	r3, r2
 385              	.LVL8:
 119:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 386              		.loc 1 119 0
 387 000a 0922     		movs	r2, #9
 388 000c 1343     		orrs	r3, r2
 389              	.LVL9:
 390 000e DBB2     		uxtb	r3, r3
 391 0010 0B70     		strb	r3, [r1]
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 392              		.loc 1 129 0
 393 0012 1349     		ldr	r1, .L38+4
 394 0014 0A78     		ldrb	r2, [r1]
 395 0016 0123     		movs	r3, #1
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 22


 396 0018 1A43     		orrs	r2, r3
 397 001a D2B2     		uxtb	r2, r2
 398 001c 0A70     		strb	r2, [r1]
 130:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 399              		.loc 1 130 0
 400 001e 114C     		ldr	r4, .L38+8
 401 0020 2278     		ldrb	r2, [r4]
 402 0022 1343     		orrs	r3, r2
 403 0024 DBB2     		uxtb	r3, r3
 404 0026 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 405              		.loc 1 133 0
 406 0028 C825     		movs	r5, #200
 407 002a 6D00     		lsls	r5, r5, #1
 408 002c 2800     		movs	r0, r5
 409 002e FFF7FEFF 		bl	PWM_WriteCounter
 410              	.LVL10:
 136:Generated_Source\PSoC4/PWM.c **** 
 411              		.loc 1 136 0
 412 0032 2800     		movs	r0, r5
 413 0034 FFF7FEFF 		bl	PWM_WritePeriod
 414              	.LVL11:
 139:Generated_Source\PSoC4/PWM.c ****         #else
 415              		.loc 1 139 0
 416 0038 6420     		movs	r0, #100
 417 003a FFF7FEFF 		bl	PWM_WriteCompare
 418              	.LVL12:
 154:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 419              		.loc 1 154 0
 420 003e 0120     		movs	r0, #1
 421 0040 FFF7FEFF 		bl	PWM_SetInterruptMode
 422              	.LVL13:
 167:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 423              		.loc 1 167 0
 424 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 425              	.LVL14:
 169:Generated_Source\PSoC4/PWM.c **** 
 426              		.loc 1 169 0
 427 0048 2278     		ldrb	r2, [r4]
 428 004a 1023     		movs	r3, #16
 429 004c 1343     		orrs	r3, r2
 430 004e DBB2     		uxtb	r3, r3
 431 0050 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/PWM.c **** 
 432              		.loc 1 172 0
 433 0052 FFF7FEFF 		bl	CyExitCriticalSection
 434              	.LVL15:
 176:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 435              		.loc 1 176 0
 436 0056 FFF7FEFF 		bl	PWM_ClearFIFO
 437              	.LVL16:
 179:Generated_Source\PSoC4/PWM.c **** 
 438              		.loc 1 179 0
 439              		@ sp needed
 440 005a 70BD     		pop	{r4, r5, r6, pc}
 441              	.L39:
 442              		.align	2
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 23


 443              	.L38:
 444 005c 73000F40 		.word	1074724979
 445 0060 92000F40 		.word	1074725010
 446 0064 93000F40 		.word	1074725011
 447              		.cfi_endproc
 448              	.LFE1:
 449              		.size	PWM_Init, .-PWM_Init
 450              		.section	.text.PWM_Start,"ax",%progbits
 451              		.align	2
 452              		.global	PWM_Start
 453              		.code	16
 454              		.thumb_func
 455              		.type	PWM_Start, %function
 456              	PWM_Start:
 457              	.LFB0:
  56:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 458              		.loc 1 56 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462 0000 10B5     		push	{r4, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 4, -8
 465              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM.c ****     {
 466              		.loc 1 58 0
 467 0002 064B     		ldr	r3, .L42
 468 0004 1B78     		ldrb	r3, [r3]
 469 0006 002B     		cmp	r3, #0
 470 0008 04D1     		bne	.L41
  60:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 471              		.loc 1 60 0
 472 000a FFF7FEFF 		bl	PWM_Init
 473              	.LVL17:
  61:Generated_Source\PSoC4/PWM.c ****     }
 474              		.loc 1 61 0
 475 000e 0122     		movs	r2, #1
 476 0010 024B     		ldr	r3, .L42
 477 0012 1A70     		strb	r2, [r3]
 478              	.L41:
  63:Generated_Source\PSoC4/PWM.c **** 
 479              		.loc 1 63 0
 480 0014 FFF7FEFF 		bl	PWM_Enable
 481              	.LVL18:
  65:Generated_Source\PSoC4/PWM.c **** 
 482              		.loc 1 65 0
 483              		@ sp needed
 484 0018 10BD     		pop	{r4, pc}
 485              	.L43:
 486 001a C046     		.align	2
 487              	.L42:
 488 001c 00000000 		.word	.LANCHOR0
 489              		.cfi_endproc
 490              	.LFE0:
 491              		.size	PWM_Start, .-PWM_Start
 492              		.section	.text.PWM_ReadCompare,"ax",%progbits
 493              		.align	2
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 24


 494              		.global	PWM_ReadCompare
 495              		.code	16
 496              		.thumb_func
 497              		.type	PWM_ReadCompare, %function
 498              	PWM_ReadCompare:
 499              	.LFB14:
 794:Generated_Source\PSoC4/PWM.c **** 
 795:Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM.c **** 
 797:Generated_Source\PSoC4/PWM.c **** 
 798:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM.c **** 
 800:Generated_Source\PSoC4/PWM.c **** 
 801:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
 803:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM.c ****     *
 805:Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM.c ****     *
 809:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM.c ****     *  None
 811:Generated_Source\PSoC4/PWM.c ****     *
 812:Generated_Source\PSoC4/PWM.c ****     * Return:
 813:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM.c ****     *
 815:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM.c ****     {
 500              		.loc 1 817 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 818:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM.c ****         #else
 821:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 505              		.loc 1 821 0
 506 0000 014B     		ldr	r3, .L45
 507 0002 1888     		ldrh	r0, [r3]
 508 0004 80B2     		uxth	r0, r0
 822:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM.c ****     }
 509              		.loc 1 823 0
 510              		@ sp needed
 511 0006 7047     		bx	lr
 512              	.L46:
 513              		.align	2
 514              	.L45:
 515 0008 44100F40 		.word	1074729028
 516              		.cfi_endproc
 517              	.LFE14:
 518              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 519              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 520              		.align	2
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 25


 521              		.global	PWM_ReadPeriod
 522              		.code	16
 523              		.thumb_func
 524              		.type	PWM_ReadPeriod, %function
 525              	PWM_ReadPeriod:
 526              	.LFB15:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** #else
 826:Generated_Source\PSoC4/PWM.c **** 
 827:Generated_Source\PSoC4/PWM.c **** 
 828:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM.c ****     *
 832:Generated_Source\PSoC4/PWM.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM.c ****     *
 835:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM.c ****     *  None
 837:Generated_Source\PSoC4/PWM.c ****     *
 838:Generated_Source\PSoC4/PWM.c ****     * Return:
 839:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM.c ****     *
 841:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM.c ****     {
 844:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM.c ****     }
 846:Generated_Source\PSoC4/PWM.c **** 
 847:Generated_Source\PSoC4/PWM.c **** 
 848:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM.c ****     *
 852:Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM.c ****     *
 855:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM.c ****     *  None
 857:Generated_Source\PSoC4/PWM.c ****     *
 858:Generated_Source\PSoC4/PWM.c ****     * Return:
 859:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM.c ****     *
 861:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM.c ****     {
 864:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/PWM.c ****     }
 866:Generated_Source\PSoC4/PWM.c **** 
 867:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM.c **** 
 869:Generated_Source\PSoC4/PWM.c **** 
 870:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM.c **** *
 874:Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 26


 875:Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM.c **** *
 877:Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM.c **** *  None
 879:Generated_Source\PSoC4/PWM.c **** *
 880:Generated_Source\PSoC4/PWM.c **** * Return:
 881:Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM.c **** *
 883:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM.c **** {
 527              		.loc 1 885 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 886:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM.c ****     #else
 889:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 532              		.loc 1 889 0
 533 0000 014B     		ldr	r3, .L48
 534 0002 1888     		ldrh	r0, [r3]
 535 0004 80B2     		uxth	r0, r0
 890:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM.c **** }
 536              		.loc 1 891 0
 537              		@ sp needed
 538 0006 7047     		bx	lr
 539              	.L49:
 540              		.align	2
 541              	.L48:
 542 0008 84100F40 		.word	1074729092
 543              		.cfi_endproc
 544              	.LFE15:
 545              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 546              		.global	PWM_initVar
 547              		.bss
 548              		.set	.LANCHOR0,. + 0
 549              		.type	PWM_initVar, %object
 550              		.size	PWM_initVar, 1
 551              	PWM_initVar:
 552 0000 00       		.space	1
 553              		.text
 554              	.Letext0:
 555              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 556              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 557              		.section	.debug_info,"",%progbits
 558              	.Ldebug_info0:
 559 0000 4D030000 		.4byte	0x34d
 560 0004 0400     		.2byte	0x4
 561 0006 00000000 		.4byte	.Ldebug_abbrev0
 562 000a 04       		.byte	0x4
 563 000b 01       		.uleb128 0x1
 564 000c BA010000 		.4byte	.LASF43
 565 0010 0C       		.byte	0xc
 566 0011 FF020000 		.4byte	.LASF44
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 27


 567 0015 16000000 		.4byte	.LASF45
 568 0019 00000000 		.4byte	.Ldebug_ranges0+0
 569 001d 00000000 		.4byte	0
 570 0021 00000000 		.4byte	.Ldebug_line0
 571 0025 02       		.uleb128 0x2
 572 0026 01       		.byte	0x1
 573 0027 06       		.byte	0x6
 574 0028 40030000 		.4byte	.LASF0
 575 002c 02       		.uleb128 0x2
 576 002d 01       		.byte	0x1
 577 002e 08       		.byte	0x8
 578 002f 0B010000 		.4byte	.LASF1
 579 0033 02       		.uleb128 0x2
 580 0034 02       		.byte	0x2
 581 0035 05       		.byte	0x5
 582 0036 CD020000 		.4byte	.LASF2
 583 003a 02       		.uleb128 0x2
 584 003b 02       		.byte	0x2
 585 003c 07       		.byte	0x7
 586 003d C3000000 		.4byte	.LASF3
 587 0041 02       		.uleb128 0x2
 588 0042 04       		.byte	0x4
 589 0043 05       		.byte	0x5
 590 0044 F1020000 		.4byte	.LASF4
 591 0048 02       		.uleb128 0x2
 592 0049 04       		.byte	0x4
 593 004a 07       		.byte	0x7
 594 004b 1E010000 		.4byte	.LASF5
 595 004f 02       		.uleb128 0x2
 596 0050 08       		.byte	0x8
 597 0051 05       		.byte	0x5
 598 0052 76020000 		.4byte	.LASF6
 599 0056 02       		.uleb128 0x2
 600 0057 08       		.byte	0x8
 601 0058 07       		.byte	0x7
 602 0059 F4000000 		.4byte	.LASF7
 603 005d 03       		.uleb128 0x3
 604 005e 04       		.byte	0x4
 605 005f 05       		.byte	0x5
 606 0060 696E7400 		.ascii	"int\000"
 607 0064 02       		.uleb128 0x2
 608 0065 04       		.byte	0x4
 609 0066 07       		.byte	0x7
 610 0067 90010000 		.4byte	.LASF8
 611 006b 04       		.uleb128 0x4
 612 006c 40010000 		.4byte	.LASF9
 613 0070 02       		.byte	0x2
 614 0071 FB01     		.2byte	0x1fb
 615 0073 2C000000 		.4byte	0x2c
 616 0077 04       		.uleb128 0x4
 617 0078 66010000 		.4byte	.LASF10
 618 007c 02       		.byte	0x2
 619 007d FC01     		.2byte	0x1fc
 620 007f 3A000000 		.4byte	0x3a
 621 0083 02       		.uleb128 0x2
 622 0084 04       		.byte	0x4
 623 0085 04       		.byte	0x4
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 28


 624 0086 E6000000 		.4byte	.LASF11
 625 008a 02       		.uleb128 0x2
 626 008b 08       		.byte	0x8
 627 008c 04       		.byte	0x4
 628 008d 4E010000 		.4byte	.LASF12
 629 0091 02       		.uleb128 0x2
 630 0092 01       		.byte	0x1
 631 0093 08       		.byte	0x8
 632 0094 FA020000 		.4byte	.LASF13
 633 0098 04       		.uleb128 0x4
 634 0099 19010000 		.4byte	.LASF14
 635 009d 02       		.byte	0x2
 636 009e A502     		.2byte	0x2a5
 637 00a0 A4000000 		.4byte	0xa4
 638 00a4 05       		.uleb128 0x5
 639 00a5 6B000000 		.4byte	0x6b
 640 00a9 04       		.uleb128 0x4
 641 00aa 00000000 		.4byte	.LASF15
 642 00ae 02       		.byte	0x2
 643 00af A602     		.2byte	0x2a6
 644 00b1 B5000000 		.4byte	0xb5
 645 00b5 05       		.uleb128 0x5
 646 00b6 77000000 		.4byte	0x77
 647 00ba 02       		.uleb128 0x2
 648 00bb 08       		.byte	0x8
 649 00bc 04       		.byte	0x4
 650 00bd 1C030000 		.4byte	.LASF16
 651 00c1 02       		.uleb128 0x2
 652 00c2 04       		.byte	0x4
 653 00c3 07       		.byte	0x7
 654 00c4 6D020000 		.4byte	.LASF17
 655 00c8 06       		.uleb128 0x6
 656 00c9 54030000 		.4byte	.LASF18
 657 00cd 01       		.byte	0x1
 658 00ce C7       		.byte	0xc7
 659 00cf 00000000 		.4byte	.LFB2
 660 00d3 14000000 		.4byte	.LFE2-.LFB2
 661 00d7 01       		.uleb128 0x1
 662 00d8 9C       		.byte	0x9c
 663 00d9 06       		.uleb128 0x6
 664 00da E8020000 		.4byte	.LASF19
 665 00de 01       		.byte	0x1
 666 00df E9       		.byte	0xe9
 667 00e0 00000000 		.4byte	.LFB3
 668 00e4 10000000 		.4byte	.LFE3-.LFB3
 669 00e8 01       		.uleb128 0x1
 670 00e9 9C       		.byte	0x9c
 671 00ea 07       		.uleb128 0x7
 672 00eb D7020000 		.4byte	.LASF20
 673 00ef 01       		.byte	0x1
 674 00f0 9301     		.2byte	0x193
 675 00f2 00000000 		.4byte	.LFB4
 676 00f6 0C000000 		.4byte	.LFE4-.LFB4
 677 00fa 01       		.uleb128 0x1
 678 00fb 9C       		.byte	0x9c
 679 00fc 0F010000 		.4byte	0x10f
 680 0100 08       		.uleb128 0x8
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 29


 681 0101 EC000000 		.4byte	.LASF22
 682 0105 01       		.byte	0x1
 683 0106 9301     		.2byte	0x193
 684 0108 77000000 		.4byte	0x77
 685 010c 01       		.uleb128 0x1
 686 010d 50       		.byte	0x50
 687 010e 00       		.byte	0
 688 010f 09       		.uleb128 0x9
 689 0110 30010000 		.4byte	.LASF28
 690 0114 01       		.byte	0x1
 691 0115 A901     		.2byte	0x1a9
 692 0117 77000000 		.4byte	0x77
 693 011b 00000000 		.4byte	.LFB5
 694 011f 14000000 		.4byte	.LFE5-.LFB5
 695 0123 01       		.uleb128 0x1
 696 0124 9C       		.byte	0x9c
 697 0125 07       		.uleb128 0x7
 698 0126 48020000 		.4byte	.LASF21
 699 012a 01       		.byte	0x1
 700 012b E201     		.2byte	0x1e2
 701 012d 00000000 		.4byte	.LFB7
 702 0131 0C000000 		.4byte	.LFE7-.LFB7
 703 0135 01       		.uleb128 0x1
 704 0136 9C       		.byte	0x9c
 705 0137 4A010000 		.4byte	0x14a
 706 013b 08       		.uleb128 0x8
 707 013c B2000000 		.4byte	.LASF23
 708 0140 01       		.byte	0x1
 709 0141 E201     		.2byte	0x1e2
 710 0143 77000000 		.4byte	0x77
 711 0147 01       		.uleb128 0x1
 712 0148 50       		.byte	0x50
 713 0149 00       		.byte	0
 714 014a 07       		.uleb128 0x7
 715 014b 55010000 		.4byte	.LASF24
 716 014f 01       		.byte	0x1
 717 0150 0402     		.2byte	0x204
 718 0152 00000000 		.4byte	.LFB8
 719 0156 0C000000 		.4byte	.LFE8-.LFB8
 720 015a 01       		.uleb128 0x1
 721 015b 9C       		.byte	0x9c
 722 015c 6F010000 		.4byte	0x16f
 723 0160 08       		.uleb128 0x8
 724 0161 4C030000 		.4byte	.LASF25
 725 0165 01       		.byte	0x1
 726 0166 0402     		.2byte	0x204
 727 0168 77000000 		.4byte	0x77
 728 016c 01       		.uleb128 0x1
 729 016d 50       		.byte	0x50
 730 016e 00       		.byte	0
 731 016f 07       		.uleb128 0x7
 732 0170 58020000 		.4byte	.LASF26
 733 0174 01       		.byte	0x1
 734 0175 AC02     		.2byte	0x2ac
 735 0177 00000000 		.4byte	.LFB9
 736 017b 0C000000 		.4byte	.LFE9-.LFB9
 737 017f 01       		.uleb128 0x1
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 30


 738 0180 9C       		.byte	0x9c
 739 0181 94010000 		.4byte	0x194
 740 0185 08       		.uleb128 0x8
 741 0186 84020000 		.4byte	.LASF27
 742 018a 01       		.byte	0x1
 743 018b AC02     		.2byte	0x2ac
 744 018d 6B000000 		.4byte	0x6b
 745 0191 01       		.uleb128 0x1
 746 0192 50       		.byte	0x50
 747 0193 00       		.byte	0
 748 0194 09       		.uleb128 0x9
 749 0195 5F030000 		.4byte	.LASF29
 750 0199 01       		.byte	0x1
 751 019a C702     		.2byte	0x2c7
 752 019c 6B000000 		.4byte	0x6b
 753 01a0 00000000 		.4byte	.LFB10
 754 01a4 0C000000 		.4byte	.LFE10-.LFB10
 755 01a8 01       		.uleb128 0x1
 756 01a9 9C       		.byte	0x9c
 757 01aa 0A       		.uleb128 0xa
 758 01ab 28030000 		.4byte	.LASF46
 759 01af 01       		.byte	0x1
 760 01b0 E102     		.2byte	0x2e1
 761 01b2 6B000000 		.4byte	0x6b
 762 01b6 00000000 		.4byte	.LFB11
 763 01ba 0C000000 		.4byte	.LFE11-.LFB11
 764 01be 01       		.uleb128 0x1
 765 01bf 9C       		.byte	0x9c
 766 01c0 D3010000 		.4byte	0x1d3
 767 01c4 0B       		.uleb128 0xb
 768 01c5 B3010000 		.4byte	.LASF35
 769 01c9 01       		.byte	0x1
 770 01ca E302     		.2byte	0x2e3
 771 01cc 6B000000 		.4byte	0x6b
 772 01d0 01       		.uleb128 0x1
 773 01d1 50       		.byte	0x50
 774 01d2 00       		.byte	0
 775 01d3 07       		.uleb128 0x7
 776 01d4 92020000 		.4byte	.LASF30
 777 01d8 01       		.byte	0x1
 778 01d9 FD02     		.2byte	0x2fd
 779 01db 00000000 		.4byte	.LFB12
 780 01df 0C000000 		.4byte	.LFE12-.LFB12
 781 01e3 01       		.uleb128 0x1
 782 01e4 9C       		.byte	0x9c
 783 01e5 F8010000 		.4byte	0x1f8
 784 01e9 08       		.uleb128 0x8
 785 01ea 46010000 		.4byte	.LASF31
 786 01ee 01       		.byte	0x1
 787 01ef FD02     		.2byte	0x2fd
 788 01f1 6B000000 		.4byte	0x6b
 789 01f5 01       		.uleb128 0x1
 790 01f6 50       		.byte	0x50
 791 01f7 00       		.byte	0
 792 01f8 09       		.uleb128 0x9
 793 01f9 D6000000 		.4byte	.LASF32
 794 01fd 01       		.byte	0x1
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 31


 795 01fe 1603     		.2byte	0x316
 796 0200 77000000 		.4byte	0x77
 797 0204 00000000 		.4byte	.LFB13
 798 0208 0C000000 		.4byte	.LFE13-.LFB13
 799 020c 01       		.uleb128 0x1
 800 020d 9C       		.byte	0x9c
 801 020e 07       		.uleb128 0x7
 802 020f A4000000 		.4byte	.LASF33
 803 0213 01       		.byte	0x1
 804 0214 C501     		.2byte	0x1c5
 805 0216 00000000 		.4byte	.LFB6
 806 021a 12000000 		.4byte	.LFE6-.LFB6
 807 021e 01       		.uleb128 0x1
 808 021f 9C       		.byte	0x9c
 809 0220 37020000 		.4byte	0x237
 810 0224 0C       		.uleb128 0xc
 811 0225 08000000 		.4byte	.LVL6
 812 0229 F8010000 		.4byte	0x1f8
 813 022d 0C       		.uleb128 0xc
 814 022e 0C000000 		.4byte	.LVL7
 815 0232 94010000 		.4byte	0x194
 816 0236 00       		.byte	0
 817 0237 0D       		.uleb128 0xd
 818 0238 9B000000 		.4byte	.LASF34
 819 023c 01       		.byte	0x1
 820 023d 54       		.byte	0x54
 821 023e 00000000 		.4byte	.LFB1
 822 0242 68000000 		.4byte	.LFE1-.LFB1
 823 0246 01       		.uleb128 0x1
 824 0247 9C       		.byte	0x9c
 825 0248 D5020000 		.4byte	0x2d5
 826 024c 0E       		.uleb128 0xe
 827 024d 76030000 		.4byte	.LASF36
 828 0251 01       		.byte	0x1
 829 0252 57       		.byte	0x57
 830 0253 6B000000 		.4byte	0x6b
 831 0257 00000000 		.4byte	.LLST0
 832 025b 0E       		.uleb128 0xe
 833 025c AB020000 		.4byte	.LASF37
 834 0260 01       		.byte	0x1
 835 0261 5D       		.byte	0x5d
 836 0262 6B000000 		.4byte	0x6b
 837 0266 13000000 		.4byte	.LLST1
 838 026a 0F       		.uleb128 0xf
 839 026b 32000000 		.4byte	.LVL10
 840 026f EA000000 		.4byte	0xea
 841 0273 7E020000 		.4byte	0x27e
 842 0277 10       		.uleb128 0x10
 843 0278 01       		.uleb128 0x1
 844 0279 50       		.byte	0x50
 845 027a 02       		.uleb128 0x2
 846 027b 75       		.byte	0x75
 847 027c 00       		.sleb128 0
 848 027d 00       		.byte	0
 849 027e 0F       		.uleb128 0xf
 850 027f 38000000 		.4byte	.LVL11
 851 0283 25010000 		.4byte	0x125
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 32


 852 0287 92020000 		.4byte	0x292
 853 028b 10       		.uleb128 0x10
 854 028c 01       		.uleb128 0x1
 855 028d 50       		.byte	0x50
 856 028e 02       		.uleb128 0x2
 857 028f 75       		.byte	0x75
 858 0290 00       		.sleb128 0
 859 0291 00       		.byte	0
 860 0292 0F       		.uleb128 0xf
 861 0293 3E000000 		.4byte	.LVL12
 862 0297 4A010000 		.4byte	0x14a
 863 029b A6020000 		.4byte	0x2a6
 864 029f 10       		.uleb128 0x10
 865 02a0 01       		.uleb128 0x1
 866 02a1 50       		.byte	0x50
 867 02a2 02       		.uleb128 0x2
 868 02a3 08       		.byte	0x8
 869 02a4 64       		.byte	0x64
 870 02a5 00       		.byte	0
 871 02a6 0F       		.uleb128 0xf
 872 02a7 44000000 		.4byte	.LVL13
 873 02ab 6F010000 		.4byte	0x16f
 874 02af B9020000 		.4byte	0x2b9
 875 02b3 10       		.uleb128 0x10
 876 02b4 01       		.uleb128 0x1
 877 02b5 50       		.byte	0x50
 878 02b6 01       		.uleb128 0x1
 879 02b7 31       		.byte	0x31
 880 02b8 00       		.byte	0
 881 02b9 0C       		.uleb128 0xc
 882 02ba 48000000 		.4byte	.LVL14
 883 02be 3A030000 		.4byte	0x33a
 884 02c2 0C       		.uleb128 0xc
 885 02c3 56000000 		.4byte	.LVL15
 886 02c7 45030000 		.4byte	0x345
 887 02cb 0C       		.uleb128 0xc
 888 02cc 5A000000 		.4byte	.LVL16
 889 02d0 0E020000 		.4byte	0x20e
 890 02d4 00       		.byte	0
 891 02d5 0D       		.uleb128 0xd
 892 02d6 B9000000 		.4byte	.LASF38
 893 02da 01       		.byte	0x1
 894 02db 37       		.byte	0x37
 895 02dc 00000000 		.4byte	.LFB0
 896 02e0 20000000 		.4byte	.LFE0-.LFB0
 897 02e4 01       		.uleb128 0x1
 898 02e5 9C       		.byte	0x9c
 899 02e6 FD020000 		.4byte	0x2fd
 900 02ea 0C       		.uleb128 0xc
 901 02eb 0E000000 		.4byte	.LVL17
 902 02ef 37020000 		.4byte	0x237
 903 02f3 0C       		.uleb128 0xc
 904 02f4 18000000 		.4byte	.LVL18
 905 02f8 C8000000 		.4byte	0xc8
 906 02fc 00       		.byte	0
 907 02fd 09       		.uleb128 0x9
 908 02fe 06000000 		.4byte	.LASF39
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 33


 909 0302 01       		.byte	0x1
 910 0303 3003     		.2byte	0x330
 911 0305 77000000 		.4byte	0x77
 912 0309 00000000 		.4byte	.LFB14
 913 030d 0C000000 		.4byte	.LFE14-.LFB14
 914 0311 01       		.uleb128 0x1
 915 0312 9C       		.byte	0x9c
 916 0313 09       		.uleb128 0x9
 917 0314 BE020000 		.4byte	.LASF40
 918 0318 01       		.byte	0x1
 919 0319 7403     		.2byte	0x374
 920 031b 77000000 		.4byte	0x77
 921 031f 00000000 		.4byte	.LFB15
 922 0323 0C000000 		.4byte	.LFE15-.LFB15
 923 0327 01       		.uleb128 0x1
 924 0328 9C       		.byte	0x9c
 925 0329 11       		.uleb128 0x11
 926 032a 6D010000 		.4byte	.LASF47
 927 032e 01       		.byte	0x1
 928 032f 20       		.byte	0x20
 929 0330 6B000000 		.4byte	0x6b
 930 0334 05       		.uleb128 0x5
 931 0335 03       		.byte	0x3
 932 0336 00000000 		.4byte	PWM_initVar
 933 033a 12       		.uleb128 0x12
 934 033b 79010000 		.4byte	.LASF41
 935 033f 79010000 		.4byte	.LASF41
 936 0343 03       		.byte	0x3
 937 0344 F8       		.byte	0xf8
 938 0345 12       		.uleb128 0x12
 939 0346 9D010000 		.4byte	.LASF42
 940 034a 9D010000 		.4byte	.LASF42
 941 034e 03       		.byte	0x3
 942 034f F9       		.byte	0xf9
 943 0350 00       		.byte	0
 944              		.section	.debug_abbrev,"",%progbits
 945              	.Ldebug_abbrev0:
 946 0000 01       		.uleb128 0x1
 947 0001 11       		.uleb128 0x11
 948 0002 01       		.byte	0x1
 949 0003 25       		.uleb128 0x25
 950 0004 0E       		.uleb128 0xe
 951 0005 13       		.uleb128 0x13
 952 0006 0B       		.uleb128 0xb
 953 0007 03       		.uleb128 0x3
 954 0008 0E       		.uleb128 0xe
 955 0009 1B       		.uleb128 0x1b
 956 000a 0E       		.uleb128 0xe
 957 000b 55       		.uleb128 0x55
 958 000c 17       		.uleb128 0x17
 959 000d 11       		.uleb128 0x11
 960 000e 01       		.uleb128 0x1
 961 000f 10       		.uleb128 0x10
 962 0010 17       		.uleb128 0x17
 963 0011 00       		.byte	0
 964 0012 00       		.byte	0
 965 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 34


 966 0014 24       		.uleb128 0x24
 967 0015 00       		.byte	0
 968 0016 0B       		.uleb128 0xb
 969 0017 0B       		.uleb128 0xb
 970 0018 3E       		.uleb128 0x3e
 971 0019 0B       		.uleb128 0xb
 972 001a 03       		.uleb128 0x3
 973 001b 0E       		.uleb128 0xe
 974 001c 00       		.byte	0
 975 001d 00       		.byte	0
 976 001e 03       		.uleb128 0x3
 977 001f 24       		.uleb128 0x24
 978 0020 00       		.byte	0
 979 0021 0B       		.uleb128 0xb
 980 0022 0B       		.uleb128 0xb
 981 0023 3E       		.uleb128 0x3e
 982 0024 0B       		.uleb128 0xb
 983 0025 03       		.uleb128 0x3
 984 0026 08       		.uleb128 0x8
 985 0027 00       		.byte	0
 986 0028 00       		.byte	0
 987 0029 04       		.uleb128 0x4
 988 002a 16       		.uleb128 0x16
 989 002b 00       		.byte	0
 990 002c 03       		.uleb128 0x3
 991 002d 0E       		.uleb128 0xe
 992 002e 3A       		.uleb128 0x3a
 993 002f 0B       		.uleb128 0xb
 994 0030 3B       		.uleb128 0x3b
 995 0031 05       		.uleb128 0x5
 996 0032 49       		.uleb128 0x49
 997 0033 13       		.uleb128 0x13
 998 0034 00       		.byte	0
 999 0035 00       		.byte	0
 1000 0036 05       		.uleb128 0x5
 1001 0037 35       		.uleb128 0x35
 1002 0038 00       		.byte	0
 1003 0039 49       		.uleb128 0x49
 1004 003a 13       		.uleb128 0x13
 1005 003b 00       		.byte	0
 1006 003c 00       		.byte	0
 1007 003d 06       		.uleb128 0x6
 1008 003e 2E       		.uleb128 0x2e
 1009 003f 00       		.byte	0
 1010 0040 3F       		.uleb128 0x3f
 1011 0041 19       		.uleb128 0x19
 1012 0042 03       		.uleb128 0x3
 1013 0043 0E       		.uleb128 0xe
 1014 0044 3A       		.uleb128 0x3a
 1015 0045 0B       		.uleb128 0xb
 1016 0046 3B       		.uleb128 0x3b
 1017 0047 0B       		.uleb128 0xb
 1018 0048 27       		.uleb128 0x27
 1019 0049 19       		.uleb128 0x19
 1020 004a 11       		.uleb128 0x11
 1021 004b 01       		.uleb128 0x1
 1022 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 35


 1023 004d 06       		.uleb128 0x6
 1024 004e 40       		.uleb128 0x40
 1025 004f 18       		.uleb128 0x18
 1026 0050 9742     		.uleb128 0x2117
 1027 0052 19       		.uleb128 0x19
 1028 0053 00       		.byte	0
 1029 0054 00       		.byte	0
 1030 0055 07       		.uleb128 0x7
 1031 0056 2E       		.uleb128 0x2e
 1032 0057 01       		.byte	0x1
 1033 0058 3F       		.uleb128 0x3f
 1034 0059 19       		.uleb128 0x19
 1035 005a 03       		.uleb128 0x3
 1036 005b 0E       		.uleb128 0xe
 1037 005c 3A       		.uleb128 0x3a
 1038 005d 0B       		.uleb128 0xb
 1039 005e 3B       		.uleb128 0x3b
 1040 005f 05       		.uleb128 0x5
 1041 0060 27       		.uleb128 0x27
 1042 0061 19       		.uleb128 0x19
 1043 0062 11       		.uleb128 0x11
 1044 0063 01       		.uleb128 0x1
 1045 0064 12       		.uleb128 0x12
 1046 0065 06       		.uleb128 0x6
 1047 0066 40       		.uleb128 0x40
 1048 0067 18       		.uleb128 0x18
 1049 0068 9742     		.uleb128 0x2117
 1050 006a 19       		.uleb128 0x19
 1051 006b 01       		.uleb128 0x1
 1052 006c 13       		.uleb128 0x13
 1053 006d 00       		.byte	0
 1054 006e 00       		.byte	0
 1055 006f 08       		.uleb128 0x8
 1056 0070 05       		.uleb128 0x5
 1057 0071 00       		.byte	0
 1058 0072 03       		.uleb128 0x3
 1059 0073 0E       		.uleb128 0xe
 1060 0074 3A       		.uleb128 0x3a
 1061 0075 0B       		.uleb128 0xb
 1062 0076 3B       		.uleb128 0x3b
 1063 0077 05       		.uleb128 0x5
 1064 0078 49       		.uleb128 0x49
 1065 0079 13       		.uleb128 0x13
 1066 007a 02       		.uleb128 0x2
 1067 007b 18       		.uleb128 0x18
 1068 007c 00       		.byte	0
 1069 007d 00       		.byte	0
 1070 007e 09       		.uleb128 0x9
 1071 007f 2E       		.uleb128 0x2e
 1072 0080 00       		.byte	0
 1073 0081 3F       		.uleb128 0x3f
 1074 0082 19       		.uleb128 0x19
 1075 0083 03       		.uleb128 0x3
 1076 0084 0E       		.uleb128 0xe
 1077 0085 3A       		.uleb128 0x3a
 1078 0086 0B       		.uleb128 0xb
 1079 0087 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 36


 1080 0088 05       		.uleb128 0x5
 1081 0089 27       		.uleb128 0x27
 1082 008a 19       		.uleb128 0x19
 1083 008b 49       		.uleb128 0x49
 1084 008c 13       		.uleb128 0x13
 1085 008d 11       		.uleb128 0x11
 1086 008e 01       		.uleb128 0x1
 1087 008f 12       		.uleb128 0x12
 1088 0090 06       		.uleb128 0x6
 1089 0091 40       		.uleb128 0x40
 1090 0092 18       		.uleb128 0x18
 1091 0093 9742     		.uleb128 0x2117
 1092 0095 19       		.uleb128 0x19
 1093 0096 00       		.byte	0
 1094 0097 00       		.byte	0
 1095 0098 0A       		.uleb128 0xa
 1096 0099 2E       		.uleb128 0x2e
 1097 009a 01       		.byte	0x1
 1098 009b 3F       		.uleb128 0x3f
 1099 009c 19       		.uleb128 0x19
 1100 009d 03       		.uleb128 0x3
 1101 009e 0E       		.uleb128 0xe
 1102 009f 3A       		.uleb128 0x3a
 1103 00a0 0B       		.uleb128 0xb
 1104 00a1 3B       		.uleb128 0x3b
 1105 00a2 05       		.uleb128 0x5
 1106 00a3 27       		.uleb128 0x27
 1107 00a4 19       		.uleb128 0x19
 1108 00a5 49       		.uleb128 0x49
 1109 00a6 13       		.uleb128 0x13
 1110 00a7 11       		.uleb128 0x11
 1111 00a8 01       		.uleb128 0x1
 1112 00a9 12       		.uleb128 0x12
 1113 00aa 06       		.uleb128 0x6
 1114 00ab 40       		.uleb128 0x40
 1115 00ac 18       		.uleb128 0x18
 1116 00ad 9742     		.uleb128 0x2117
 1117 00af 19       		.uleb128 0x19
 1118 00b0 01       		.uleb128 0x1
 1119 00b1 13       		.uleb128 0x13
 1120 00b2 00       		.byte	0
 1121 00b3 00       		.byte	0
 1122 00b4 0B       		.uleb128 0xb
 1123 00b5 34       		.uleb128 0x34
 1124 00b6 00       		.byte	0
 1125 00b7 03       		.uleb128 0x3
 1126 00b8 0E       		.uleb128 0xe
 1127 00b9 3A       		.uleb128 0x3a
 1128 00ba 0B       		.uleb128 0xb
 1129 00bb 3B       		.uleb128 0x3b
 1130 00bc 05       		.uleb128 0x5
 1131 00bd 49       		.uleb128 0x49
 1132 00be 13       		.uleb128 0x13
 1133 00bf 02       		.uleb128 0x2
 1134 00c0 18       		.uleb128 0x18
 1135 00c1 00       		.byte	0
 1136 00c2 00       		.byte	0
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 37


 1137 00c3 0C       		.uleb128 0xc
 1138 00c4 898201   		.uleb128 0x4109
 1139 00c7 00       		.byte	0
 1140 00c8 11       		.uleb128 0x11
 1141 00c9 01       		.uleb128 0x1
 1142 00ca 31       		.uleb128 0x31
 1143 00cb 13       		.uleb128 0x13
 1144 00cc 00       		.byte	0
 1145 00cd 00       		.byte	0
 1146 00ce 0D       		.uleb128 0xd
 1147 00cf 2E       		.uleb128 0x2e
 1148 00d0 01       		.byte	0x1
 1149 00d1 3F       		.uleb128 0x3f
 1150 00d2 19       		.uleb128 0x19
 1151 00d3 03       		.uleb128 0x3
 1152 00d4 0E       		.uleb128 0xe
 1153 00d5 3A       		.uleb128 0x3a
 1154 00d6 0B       		.uleb128 0xb
 1155 00d7 3B       		.uleb128 0x3b
 1156 00d8 0B       		.uleb128 0xb
 1157 00d9 27       		.uleb128 0x27
 1158 00da 19       		.uleb128 0x19
 1159 00db 11       		.uleb128 0x11
 1160 00dc 01       		.uleb128 0x1
 1161 00dd 12       		.uleb128 0x12
 1162 00de 06       		.uleb128 0x6
 1163 00df 40       		.uleb128 0x40
 1164 00e0 18       		.uleb128 0x18
 1165 00e1 9742     		.uleb128 0x2117
 1166 00e3 19       		.uleb128 0x19
 1167 00e4 01       		.uleb128 0x1
 1168 00e5 13       		.uleb128 0x13
 1169 00e6 00       		.byte	0
 1170 00e7 00       		.byte	0
 1171 00e8 0E       		.uleb128 0xe
 1172 00e9 34       		.uleb128 0x34
 1173 00ea 00       		.byte	0
 1174 00eb 03       		.uleb128 0x3
 1175 00ec 0E       		.uleb128 0xe
 1176 00ed 3A       		.uleb128 0x3a
 1177 00ee 0B       		.uleb128 0xb
 1178 00ef 3B       		.uleb128 0x3b
 1179 00f0 0B       		.uleb128 0xb
 1180 00f1 49       		.uleb128 0x49
 1181 00f2 13       		.uleb128 0x13
 1182 00f3 02       		.uleb128 0x2
 1183 00f4 17       		.uleb128 0x17
 1184 00f5 00       		.byte	0
 1185 00f6 00       		.byte	0
 1186 00f7 0F       		.uleb128 0xf
 1187 00f8 898201   		.uleb128 0x4109
 1188 00fb 01       		.byte	0x1
 1189 00fc 11       		.uleb128 0x11
 1190 00fd 01       		.uleb128 0x1
 1191 00fe 31       		.uleb128 0x31
 1192 00ff 13       		.uleb128 0x13
 1193 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 38


 1194 0101 13       		.uleb128 0x13
 1195 0102 00       		.byte	0
 1196 0103 00       		.byte	0
 1197 0104 10       		.uleb128 0x10
 1198 0105 8A8201   		.uleb128 0x410a
 1199 0108 00       		.byte	0
 1200 0109 02       		.uleb128 0x2
 1201 010a 18       		.uleb128 0x18
 1202 010b 9142     		.uleb128 0x2111
 1203 010d 18       		.uleb128 0x18
 1204 010e 00       		.byte	0
 1205 010f 00       		.byte	0
 1206 0110 11       		.uleb128 0x11
 1207 0111 34       		.uleb128 0x34
 1208 0112 00       		.byte	0
 1209 0113 03       		.uleb128 0x3
 1210 0114 0E       		.uleb128 0xe
 1211 0115 3A       		.uleb128 0x3a
 1212 0116 0B       		.uleb128 0xb
 1213 0117 3B       		.uleb128 0x3b
 1214 0118 0B       		.uleb128 0xb
 1215 0119 49       		.uleb128 0x49
 1216 011a 13       		.uleb128 0x13
 1217 011b 3F       		.uleb128 0x3f
 1218 011c 19       		.uleb128 0x19
 1219 011d 02       		.uleb128 0x2
 1220 011e 18       		.uleb128 0x18
 1221 011f 00       		.byte	0
 1222 0120 00       		.byte	0
 1223 0121 12       		.uleb128 0x12
 1224 0122 2E       		.uleb128 0x2e
 1225 0123 00       		.byte	0
 1226 0124 3F       		.uleb128 0x3f
 1227 0125 19       		.uleb128 0x19
 1228 0126 3C       		.uleb128 0x3c
 1229 0127 19       		.uleb128 0x19
 1230 0128 6E       		.uleb128 0x6e
 1231 0129 0E       		.uleb128 0xe
 1232 012a 03       		.uleb128 0x3
 1233 012b 0E       		.uleb128 0xe
 1234 012c 3A       		.uleb128 0x3a
 1235 012d 0B       		.uleb128 0xb
 1236 012e 3B       		.uleb128 0x3b
 1237 012f 0B       		.uleb128 0xb
 1238 0130 00       		.byte	0
 1239 0131 00       		.byte	0
 1240 0132 00       		.byte	0
 1241              		.section	.debug_loc,"",%progbits
 1242              	.Ldebug_loc0:
 1243              	.LLST0:
 1244 0000 0A000000 		.4byte	.LVL8
 1245 0004 0E000000 		.4byte	.LVL9
 1246 0008 0100     		.2byte	0x1
 1247 000a 53       		.byte	0x53
 1248 000b 00000000 		.4byte	0
 1249 000f 00000000 		.4byte	0
 1250              	.LLST1:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 39


 1251 0013 48000000 		.4byte	.LVL14
 1252 0017 55000000 		.4byte	.LVL15-1
 1253 001b 0100     		.2byte	0x1
 1254 001d 50       		.byte	0x50
 1255 001e 00000000 		.4byte	0
 1256 0022 00000000 		.4byte	0
 1257              		.section	.debug_aranges,"",%progbits
 1258 0000 94000000 		.4byte	0x94
 1259 0004 0200     		.2byte	0x2
 1260 0006 00000000 		.4byte	.Ldebug_info0
 1261 000a 04       		.byte	0x4
 1262 000b 00       		.byte	0
 1263 000c 0000     		.2byte	0
 1264 000e 0000     		.2byte	0
 1265 0010 00000000 		.4byte	.LFB2
 1266 0014 14000000 		.4byte	.LFE2-.LFB2
 1267 0018 00000000 		.4byte	.LFB3
 1268 001c 10000000 		.4byte	.LFE3-.LFB3
 1269 0020 00000000 		.4byte	.LFB4
 1270 0024 0C000000 		.4byte	.LFE4-.LFB4
 1271 0028 00000000 		.4byte	.LFB5
 1272 002c 14000000 		.4byte	.LFE5-.LFB5
 1273 0030 00000000 		.4byte	.LFB7
 1274 0034 0C000000 		.4byte	.LFE7-.LFB7
 1275 0038 00000000 		.4byte	.LFB8
 1276 003c 0C000000 		.4byte	.LFE8-.LFB8
 1277 0040 00000000 		.4byte	.LFB9
 1278 0044 0C000000 		.4byte	.LFE9-.LFB9
 1279 0048 00000000 		.4byte	.LFB10
 1280 004c 0C000000 		.4byte	.LFE10-.LFB10
 1281 0050 00000000 		.4byte	.LFB11
 1282 0054 0C000000 		.4byte	.LFE11-.LFB11
 1283 0058 00000000 		.4byte	.LFB12
 1284 005c 0C000000 		.4byte	.LFE12-.LFB12
 1285 0060 00000000 		.4byte	.LFB13
 1286 0064 0C000000 		.4byte	.LFE13-.LFB13
 1287 0068 00000000 		.4byte	.LFB6
 1288 006c 12000000 		.4byte	.LFE6-.LFB6
 1289 0070 00000000 		.4byte	.LFB1
 1290 0074 68000000 		.4byte	.LFE1-.LFB1
 1291 0078 00000000 		.4byte	.LFB0
 1292 007c 20000000 		.4byte	.LFE0-.LFB0
 1293 0080 00000000 		.4byte	.LFB14
 1294 0084 0C000000 		.4byte	.LFE14-.LFB14
 1295 0088 00000000 		.4byte	.LFB15
 1296 008c 0C000000 		.4byte	.LFE15-.LFB15
 1297 0090 00000000 		.4byte	0
 1298 0094 00000000 		.4byte	0
 1299              		.section	.debug_ranges,"",%progbits
 1300              	.Ldebug_ranges0:
 1301 0000 00000000 		.4byte	.LFB2
 1302 0004 14000000 		.4byte	.LFE2
 1303 0008 00000000 		.4byte	.LFB3
 1304 000c 10000000 		.4byte	.LFE3
 1305 0010 00000000 		.4byte	.LFB4
 1306 0014 0C000000 		.4byte	.LFE4
 1307 0018 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 40


 1308 001c 14000000 		.4byte	.LFE5
 1309 0020 00000000 		.4byte	.LFB7
 1310 0024 0C000000 		.4byte	.LFE7
 1311 0028 00000000 		.4byte	.LFB8
 1312 002c 0C000000 		.4byte	.LFE8
 1313 0030 00000000 		.4byte	.LFB9
 1314 0034 0C000000 		.4byte	.LFE9
 1315 0038 00000000 		.4byte	.LFB10
 1316 003c 0C000000 		.4byte	.LFE10
 1317 0040 00000000 		.4byte	.LFB11
 1318 0044 0C000000 		.4byte	.LFE11
 1319 0048 00000000 		.4byte	.LFB12
 1320 004c 0C000000 		.4byte	.LFE12
 1321 0050 00000000 		.4byte	.LFB13
 1322 0054 0C000000 		.4byte	.LFE13
 1323 0058 00000000 		.4byte	.LFB6
 1324 005c 12000000 		.4byte	.LFE6
 1325 0060 00000000 		.4byte	.LFB1
 1326 0064 68000000 		.4byte	.LFE1
 1327 0068 00000000 		.4byte	.LFB0
 1328 006c 20000000 		.4byte	.LFE0
 1329 0070 00000000 		.4byte	.LFB14
 1330 0074 0C000000 		.4byte	.LFE14
 1331 0078 00000000 		.4byte	.LFB15
 1332 007c 0C000000 		.4byte	.LFE15
 1333 0080 00000000 		.4byte	0
 1334 0084 00000000 		.4byte	0
 1335              		.section	.debug_line,"",%progbits
 1336              	.Ldebug_line0:
 1337 0000 8D010000 		.section	.debug_str,"MS",%progbits,1
 1337      02004B00 
 1337      00000201 
 1337      FB0E0D00 
 1337      01010101 
 1338              	.LASF15:
 1339 0000 72656731 		.ascii	"reg16\000"
 1339      3600
 1340              	.LASF39:
 1341 0006 50574D5F 		.ascii	"PWM_ReadCompare\000"
 1341      52656164 
 1341      436F6D70 
 1341      61726500 
 1342              	.LASF45:
 1343 0016 443A5C45 		.ascii	"D:\\ESCRITORIO\\Tesis MIB\\Proyecto de Tesis\\elect"
 1343      53435249 
 1343      544F5249 
 1343      4F5C5465 
 1343      73697320 
 1344 0045 726F6573 		.ascii	"roestimulador\\PSoC\\electroestimulador\\Pruebas el"
 1344      74696D75 
 1344      6C61646F 
 1344      725C5053 
 1344      6F435C65 
 1345 0075 65637472 		.ascii	"ectroestimulador\\prueba PWM_UDB.cydsn\000"
 1345      6F657374 
 1345      696D756C 
 1345      61646F72 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 41


 1345      5C707275 
 1346              	.LASF34:
 1347 009b 50574D5F 		.ascii	"PWM_Init\000"
 1347      496E6974 
 1347      00
 1348              	.LASF33:
 1349 00a4 50574D5F 		.ascii	"PWM_ClearFIFO\000"
 1349      436C6561 
 1349      72464946 
 1349      4F00
 1350              	.LASF23:
 1351 00b2 70657269 		.ascii	"period\000"
 1351      6F6400
 1352              	.LASF38:
 1353 00b9 50574D5F 		.ascii	"PWM_Start\000"
 1353      53746172 
 1353      7400
 1354              	.LASF3:
 1355 00c3 73686F72 		.ascii	"short unsigned int\000"
 1355      7420756E 
 1355      7369676E 
 1355      65642069 
 1355      6E7400
 1356              	.LASF32:
 1357 00d6 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1357      52656164 
 1357      43617074 
 1357      75726500 
 1358              	.LASF11:
 1359 00e6 666C6F61 		.ascii	"float\000"
 1359      7400
 1360              	.LASF22:
 1361 00ec 636F756E 		.ascii	"counter\000"
 1361      74657200 
 1362              	.LASF7:
 1363 00f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1363      206C6F6E 
 1363      6720756E 
 1363      7369676E 
 1363      65642069 
 1364              	.LASF1:
 1365 010b 756E7369 		.ascii	"unsigned char\000"
 1365      676E6564 
 1365      20636861 
 1365      7200
 1366              	.LASF14:
 1367 0119 72656738 		.ascii	"reg8\000"
 1367      00
 1368              	.LASF5:
 1369 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 1369      20756E73 
 1369      69676E65 
 1369      6420696E 
 1369      7400
 1370              	.LASF28:
 1371 0130 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1371      52656164 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 42


 1371      436F756E 
 1371      74657200 
 1372              	.LASF9:
 1373 0140 75696E74 		.ascii	"uint8\000"
 1373      3800
 1374              	.LASF31:
 1375 0146 636F6E74 		.ascii	"control\000"
 1375      726F6C00 
 1376              	.LASF12:
 1377 014e 646F7562 		.ascii	"double\000"
 1377      6C6500
 1378              	.LASF24:
 1379 0155 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1379      57726974 
 1379      65436F6D 
 1379      70617265 
 1379      00
 1380              	.LASF10:
 1381 0166 75696E74 		.ascii	"uint16\000"
 1381      313600
 1382              	.LASF47:
 1383 016d 50574D5F 		.ascii	"PWM_initVar\000"
 1383      696E6974 
 1383      56617200 
 1384              	.LASF41:
 1385 0179 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1385      74657243 
 1385      72697469 
 1385      63616C53 
 1385      65637469 
 1386              	.LASF8:
 1387 0190 756E7369 		.ascii	"unsigned int\000"
 1387      676E6564 
 1387      20696E74 
 1387      00
 1388              	.LASF42:
 1389 019d 43794578 		.ascii	"CyExitCriticalSection\000"
 1389      69744372 
 1389      69746963 
 1389      616C5365 
 1389      6374696F 
 1390              	.LASF35:
 1391 01b3 72657375 		.ascii	"result\000"
 1391      6C7400
 1392              	.LASF43:
 1393 01ba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1393      43313120 
 1393      352E342E 
 1393      31203230 
 1393      31363036 
 1394 01ed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1394      20726576 
 1394      6973696F 
 1394      6E203233 
 1394      37373135 
 1395 0220 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1395      66756E63 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 43


 1395      74696F6E 
 1395      2D736563 
 1395      74696F6E 
 1396              	.LASF21:
 1397 0248 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1397      57726974 
 1397      65506572 
 1397      696F6400 
 1398              	.LASF26:
 1399 0258 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 1399      53657449 
 1399      6E746572 
 1399      72757074 
 1399      4D6F6465 
 1400              	.LASF17:
 1401 026d 73697A65 		.ascii	"sizetype\000"
 1401      74797065 
 1401      00
 1402              	.LASF6:
 1403 0276 6C6F6E67 		.ascii	"long long int\000"
 1403      206C6F6E 
 1403      6720696E 
 1403      7400
 1404              	.LASF27:
 1405 0284 696E7465 		.ascii	"interruptMode\000"
 1405      72727570 
 1405      744D6F64 
 1405      6500
 1406              	.LASF30:
 1407 0292 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1407      57726974 
 1407      65436F6E 
 1407      74726F6C 
 1407      52656769 
 1408              	.LASF37:
 1409 02ab 50574D5F 		.ascii	"PWM_interruptState\000"
 1409      696E7465 
 1409      72727570 
 1409      74537461 
 1409      746500
 1410              	.LASF40:
 1411 02be 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1411      52656164 
 1411      50657269 
 1411      6F6400
 1412              	.LASF2:
 1413 02cd 73686F72 		.ascii	"short int\000"
 1413      7420696E 
 1413      7400
 1414              	.LASF20:
 1415 02d7 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1415      57726974 
 1415      65436F75 
 1415      6E746572 
 1415      00
 1416              	.LASF19:
 1417 02e8 50574D5F 		.ascii	"PWM_Stop\000"
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\ccl14mph.s 			page 44


 1417      53746F70 
 1417      00
 1418              	.LASF4:
 1419 02f1 6C6F6E67 		.ascii	"long int\000"
 1419      20696E74 
 1419      00
 1420              	.LASF13:
 1421 02fa 63686172 		.ascii	"char\000"
 1421      00
 1422              	.LASF44:
 1423 02ff 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 1423      72617465 
 1423      645F536F 
 1423      75726365 
 1423      5C50536F 
 1424              	.LASF16:
 1425 031c 6C6F6E67 		.ascii	"long double\000"
 1425      20646F75 
 1425      626C6500 
 1426              	.LASF46:
 1427 0328 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1427      52656164 
 1427      436F6E74 
 1427      726F6C52 
 1427      65676973 
 1428              	.LASF0:
 1429 0340 7369676E 		.ascii	"signed char\000"
 1429      65642063 
 1429      68617200 
 1430              	.LASF25:
 1431 034c 636F6D70 		.ascii	"compare\000"
 1431      61726500 
 1432              	.LASF18:
 1433 0354 50574D5F 		.ascii	"PWM_Enable\000"
 1433      456E6162 
 1433      6C6500
 1434              	.LASF29:
 1435 035f 50574D5F 		.ascii	"PWM_ReadStatusRegister\000"
 1435      52656164 
 1435      53746174 
 1435      75735265 
 1435      67697374 
 1436              	.LASF36:
 1437 0376 6374726C 		.ascii	"ctrl\000"
 1437      00
 1438              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
