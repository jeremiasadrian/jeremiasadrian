ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Enable, %function
  25              	PWM_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM.c **** *
  15:Generated_Source\PSoC4/PWM.c **** * Note:
  16:Generated_Source\PSoC4/PWM.c **** *
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:Generated_Source\PSoC4/PWM.c **** 
  26:Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 2


  31:Generated_Source\PSoC4/PWM.c **** 
  32:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  33:Generated_Source\PSoC4/PWM.c **** 
  34:Generated_Source\PSoC4/PWM.c **** 
  35:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM.c **** *
  39:Generated_Source\PSoC4/PWM.c **** * Summary:
  40:Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM.c **** *
  44:Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM.c **** *  None
  46:Generated_Source\PSoC4/PWM.c **** *
  47:Generated_Source\PSoC4/PWM.c **** * Return:
  48:Generated_Source\PSoC4/PWM.c **** *  None
  49:Generated_Source\PSoC4/PWM.c **** *
  50:Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM.c **** *
  54:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:Generated_Source\PSoC4/PWM.c **** {
  57:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:Generated_Source\PSoC4/PWM.c ****     {
  60:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:Generated_Source\PSoC4/PWM.c ****     }
  63:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:Generated_Source\PSoC4/PWM.c **** 
  65:Generated_Source\PSoC4/PWM.c **** }
  66:Generated_Source\PSoC4/PWM.c **** 
  67:Generated_Source\PSoC4/PWM.c **** 
  68:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM.c **** *
  72:Generated_Source\PSoC4/PWM.c **** * Summary:
  73:Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:Generated_Source\PSoC4/PWM.c **** *
  77:Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM.c **** *  None
  79:Generated_Source\PSoC4/PWM.c **** *
  80:Generated_Source\PSoC4/PWM.c **** * Return:
  81:Generated_Source\PSoC4/PWM.c **** *  None
  82:Generated_Source\PSoC4/PWM.c **** *
  83:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:Generated_Source\PSoC4/PWM.c **** {
  86:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:Generated_Source\PSoC4/PWM.c **** 
  90:Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM.c **** 
  97:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM.c **** 
 104:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM.c **** 
 123:Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM.c **** 
 133:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM.c **** 
 138:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM.c ****         #else
 141:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 4


 145:Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM.c **** 
 153:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM.c **** 
 157:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM.c ****     #else
 163:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:Generated_Source\PSoC4/PWM.c **** 
 165:Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM.c **** 
 171:Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:Generated_Source\PSoC4/PWM.c **** 
 174:Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM.c **** }
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c **** 
 182:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM.c **** *
 186:Generated_Source\PSoC4/PWM.c **** * Summary:
 187:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM.c **** *
 189:Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM.c **** *  None
 191:Generated_Source\PSoC4/PWM.c **** *
 192:Generated_Source\PSoC4/PWM.c **** * Return:
 193:Generated_Source\PSoC4/PWM.c **** *  None
 194:Generated_Source\PSoC4/PWM.c **** *
 195:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM.c **** *
 198:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:Generated_Source\PSoC4/PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM.c **** 
 207:Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 72000F40 		.word	1074724978
  48              		.cfi_endproc
  49              	.LFE2:
  50              		.size	PWM_Enable, .-PWM_Enable
  51              		.section	.text.PWM_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	PWM_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	PWM_Stop, %function
  57              	PWM_Stop:
  58              	.LFB3:
 212:Generated_Source\PSoC4/PWM.c **** 
 213:Generated_Source\PSoC4/PWM.c **** 
 214:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM.c **** *
 218:Generated_Source\PSoC4/PWM.c **** * Summary:
 219:Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM.c **** *  None
 224:Generated_Source\PSoC4/PWM.c **** *
 225:Generated_Source\PSoC4/PWM.c **** * Return:
 226:Generated_Source\PSoC4/PWM.c **** *  None
 227:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 6


 228:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM.c **** *
 232:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:Generated_Source\PSoC4/PWM.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM.c **** 
 239:Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 72000F40 		.word	1074724978
  77              		.cfi_endproc
  78              	.LFE3:
  79              		.size	PWM_Stop, .-PWM_Stop
  80              		.section	.text.PWM_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	PWM_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWM_WriteCounter, %function
  86              	PWM_WriteCounter:
  87              	.LFB4:
 245:Generated_Source\PSoC4/PWM.c **** 
 246:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM.c **** 
 249:Generated_Source\PSoC4/PWM.c **** 
 250:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM.c ****         *
 254:Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 7


 256:Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM.c ****         *
 258:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM.c ****         *
 262:Generated_Source\PSoC4/PWM.c ****         * Return:
 263:Generated_Source\PSoC4/PWM.c ****         *  None
 264:Generated_Source\PSoC4/PWM.c ****         *
 265:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM.c ****         {
 268:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM.c **** 
 270:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/PWM.c ****                 #else
 273:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM.c **** 
 276:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM.c **** 
 279:Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:Generated_Source\PSoC4/PWM.c **** 
 281:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM.c ****                 #else
 285:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM.c **** 
 288:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM.c ****                 #else
 292:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM.c **** 
 295:Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM.c **** 
 300:Generated_Source\PSoC4/PWM.c ****             #else
 301:Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM.c ****         }
 304:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM.c **** 
 308:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM.c **** 
 310:Generated_Source\PSoC4/PWM.c **** 
 311:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 8


 313:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM.c ****         *
 315:Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM.c ****         *
 318:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM.c ****         *
 322:Generated_Source\PSoC4/PWM.c ****         * Return:
 323:Generated_Source\PSoC4/PWM.c ****         *  None
 324:Generated_Source\PSoC4/PWM.c ****         *
 325:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM.c ****         {
 328:Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM.c ****             #else
 332:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:Generated_Source\PSoC4/PWM.c ****         }
 340:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM.c **** 
 342:Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM.c **** 
 344:Generated_Source\PSoC4/PWM.c **** 
 345:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM.c ****     *
 349:Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM.c ****     *
 352:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM.c ****     *
 356:Generated_Source\PSoC4/PWM.c ****     * Return:
 357:Generated_Source\PSoC4/PWM.c ****     *  None
 358:Generated_Source\PSoC4/PWM.c ****     *
 359:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM.c ****     {
 362:Generated_Source\PSoC4/PWM.c **** 
 363:Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM.c ****         #else
 367:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 9


 370:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:Generated_Source\PSoC4/PWM.c ****     }
 375:Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM.c **** 
 377:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM.c **** 
 379:Generated_Source\PSoC4/PWM.c **** 
 380:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM.c **** 
 382:Generated_Source\PSoC4/PWM.c **** 
 383:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM.c ****     *
 387:Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM.c ****     *
 393:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM.c ****     *
 396:Generated_Source\PSoC4/PWM.c ****     * Return:
 397:Generated_Source\PSoC4/PWM.c ****     *  None
 398:Generated_Source\PSoC4/PWM.c ****     *
 399:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM.c ****     *
 402:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/PWM.c ****                                        
 405:Generated_Source\PSoC4/PWM.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1880     		strh	r0, [r3]
 407:Generated_Source\PSoC4/PWM.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 04100F40 		.word	1074728964
 104              		.cfi_endproc
 105              	.LFE4:
 106              		.size	PWM_WriteCounter, .-PWM_WriteCounter
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 10


 107              		.section	.text.PWM_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	PWM_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	PWM_ReadCounter, %function
 113              	PWM_ReadCounter:
 114              	.LFB5:
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** 
 410:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM.c ****     *
 414:Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM.c ****     *
 418:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM.c ****     *  None
 420:Generated_Source\PSoC4/PWM.c ****     *
 421:Generated_Source\PSoC4/PWM.c ****     * Return:
 422:Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM.c ****     *
 424:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM.c **** 
 432:Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1888     		ldrh	r0, [r3]
 126 0008 80B2     		uxth	r0, r0
 434:Generated_Source\PSoC4/PWM.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 12000F40 		.word	1074724882
 134 0010 A4100F40 		.word	1074729124
 135              		.cfi_endproc
 136              	.LFE5:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 11


 137              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 138              		.section	.text.PWM_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	PWM_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	PWM_WritePeriod, %function
 144              	PWM_WritePeriod:
 145              	.LFB7:
 435:Generated_Source\PSoC4/PWM.c **** 
 436:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:Generated_Source\PSoC4/PWM.c **** 
 438:Generated_Source\PSoC4/PWM.c **** 
 439:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM.c ****         *
 443:Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM.c ****         *
 446:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM.c ****         *  None
 448:Generated_Source\PSoC4/PWM.c ****         *
 449:Generated_Source\PSoC4/PWM.c ****         * Return:
 450:Generated_Source\PSoC4/PWM.c ****         *  None
 451:Generated_Source\PSoC4/PWM.c ****         *
 452:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM.c ****         {
 455:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM.c ****             {
 457:Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:Generated_Source\PSoC4/PWM.c ****             }
 459:Generated_Source\PSoC4/PWM.c ****         }
 460:Generated_Source\PSoC4/PWM.c **** 
 461:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:Generated_Source\PSoC4/PWM.c **** 
 463:Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM.c **** 
 465:Generated_Source\PSoC4/PWM.c **** 
 466:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM.c **** *
 470:Generated_Source\PSoC4/PWM.c **** * Summary:
 471:Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM.c **** *
 474:Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM.c **** *
 478:Generated_Source\PSoC4/PWM.c **** * Return:
 479:Generated_Source\PSoC4/PWM.c **** *  None
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint16 period) 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 12


 483:Generated_Source\PSoC4/PWM.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM.c ****     #else
 487:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1880     		strh	r0, [r3]
 488:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 84100F40 		.word	1074729092
 162              		.cfi_endproc
 163              	.LFE7:
 164              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 165              		.section	.text.PWM_WriteCompare,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_WriteCompare
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_WriteCompare, %function
 171              	PWM_WriteCompare:
 172              	.LFB8:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM.c **** 
 493:Generated_Source\PSoC4/PWM.c **** 
 494:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM.c ****     *
 498:Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM.c ****     *
 505:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM.c ****     *
 508:Generated_Source\PSoC4/PWM.c ****     * Return:
 509:Generated_Source\PSoC4/PWM.c ****     *  None
 510:Generated_Source\PSoC4/PWM.c ****     *
 511:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 13


 513:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM.c ****     *
 515:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/PWM.c ****                                        
 518:Generated_Source\PSoC4/PWM.c ****     {
 173              		.loc 1 518 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 519:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM.c ****         #else
 522:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 522 0
 180 0000 014B     		ldr	r3, .L17
 181 0002 1880     		strh	r0, [r3]
 523:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM.c ****             #else
 529:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM.c ****     }
 182              		.loc 1 532 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 44100F40 		.word	1074729028
 189              		.cfi_endproc
 190              	.LFE8:
 191              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 192              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_SetInterruptMode
 195              		.code	16
 196              		.thumb_func
 197              		.type	PWM_SetInterruptMode, %function
 198              	PWM_SetInterruptMode:
 199              	.LFB9:
 533:Generated_Source\PSoC4/PWM.c **** 
 534:Generated_Source\PSoC4/PWM.c **** 
 535:Generated_Source\PSoC4/PWM.c **** #else
 536:Generated_Source\PSoC4/PWM.c **** 
 537:Generated_Source\PSoC4/PWM.c **** 
 538:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM.c ****     *
 542:Generated_Source\PSoC4/PWM.c ****     * Summary:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 14


 543:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM.c ****     *
 548:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM.c ****     *
 551:Generated_Source\PSoC4/PWM.c ****     * Return:
 552:Generated_Source\PSoC4/PWM.c ****     *  None
 553:Generated_Source\PSoC4/PWM.c ****     *
 554:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/PWM.c ****                                         
 557:Generated_Source\PSoC4/PWM.c ****     {
 558:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM.c ****         #else
 561:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM.c ****     }
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c ****     *
 570:Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM.c ****     *
 577:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM.c ****     *
 580:Generated_Source\PSoC4/PWM.c ****     * Return:
 581:Generated_Source\PSoC4/PWM.c ****     *  None
 582:Generated_Source\PSoC4/PWM.c ****     *
 583:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/PWM.c ****                                         
 586:Generated_Source\PSoC4/PWM.c ****     {
 587:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM.c ****         #else
 590:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM.c ****     }
 593:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM.c **** 
 595:Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 15


 600:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM.c ****     *
 602:Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM.c ****     *
 605:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM.c ****     *
 608:Generated_Source\PSoC4/PWM.c ****     * Return:
 609:Generated_Source\PSoC4/PWM.c ****     *  None
 610:Generated_Source\PSoC4/PWM.c ****     *
 611:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM.c ****     {
 614:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM.c ****         #else
 618:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM.c **** 
 622:Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM.c ****             #else
 627:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM.c **** 
 630:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM.c ****     }
 632:Generated_Source\PSoC4/PWM.c **** 
 633:Generated_Source\PSoC4/PWM.c **** 
 634:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM.c ****     *
 638:Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM.c ****     *
 641:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM.c ****     *  None
 643:Generated_Source\PSoC4/PWM.c ****     *
 644:Generated_Source\PSoC4/PWM.c ****     * Return:
 645:Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM.c ****     *
 647:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM.c ****     {
 650:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM.c ****         #else
 654:Generated_Source\PSoC4/PWM.c **** 
 655:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 16


 657:Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/PWM.c ****             #else
 660:Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM.c ****     }
 664:Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM.c **** 
 666:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c **** 
 669:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM.c ****     *
 673:Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM.c ****     *
 677:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM.c ****     *
 680:Generated_Source\PSoC4/PWM.c ****     * Return:
 681:Generated_Source\PSoC4/PWM.c ****     *  None
 682:Generated_Source\PSoC4/PWM.c ****     *
 683:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM.c ****     {
 200              		.loc 1 685 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL3:
 686:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 206              		.loc 1 686 0
 207 0000 014B     		ldr	r3, .L20
 208 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/PWM.c ****     }
 209              		.loc 1 687 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L21:
 213 0006 C046     		.align	2
 214              	.L20:
 215 0008 83000F40 		.word	1074724995
 216              		.cfi_endproc
 217              	.LFE9:
 218              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 219              		.section	.text.PWM_ReadStatusRegister,"ax",%progbits
 220              		.align	2
 221              		.global	PWM_ReadStatusRegister
 222              		.code	16
 223              		.thumb_func
 224              		.type	PWM_ReadStatusRegister, %function
 225              	PWM_ReadStatusRegister:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 17


 226              	.LFB10:
 688:Generated_Source\PSoC4/PWM.c **** 
 689:Generated_Source\PSoC4/PWM.c **** 
 690:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM.c ****     *
 694:Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM.c ****     *
 697:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM.c ****     *  None
 699:Generated_Source\PSoC4/PWM.c ****     *
 700:Generated_Source\PSoC4/PWM.c ****     * Return:
 701:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM.c ****     *
 710:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM.c ****     {
 227              		.loc 1 712 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 713:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 232              		.loc 1 713 0
 233 0000 014B     		ldr	r3, .L23
 234 0002 1878     		ldrb	r0, [r3]
 235 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/PWM.c ****     }
 236              		.loc 1 714 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L24:
 240              		.align	2
 241              	.L23:
 242 0008 63000F40 		.word	1074724963
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	PWM_ReadStatusRegister, .-PWM_ReadStatusRegister
 246              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_ReadControlRegister
 249              		.code	16
 250              		.thumb_func
 251              		.type	PWM_ReadControlRegister, %function
 252              	PWM_ReadControlRegister:
 253              	.LFB11:
 715:Generated_Source\PSoC4/PWM.c **** 
 716:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 18


 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:Generated_Source\PSoC4/PWM.c **** 
 721:Generated_Source\PSoC4/PWM.c **** 
 722:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM.c ****     *
 726:Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM.c ****     *
 730:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM.c ****     *  None
 732:Generated_Source\PSoC4/PWM.c ****     *
 733:Generated_Source\PSoC4/PWM.c ****     * Return:
 734:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM.c ****     *
 736:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM.c ****     {
 254              		.loc 1 738 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 739:Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM.c **** 
 741:Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 259              		.loc 1 741 0
 260 0000 014B     		ldr	r3, .L26
 261 0002 1878     		ldrb	r0, [r3]
 262 0004 C0B2     		uxtb	r0, r0
 263              	.LVL4:
 742:Generated_Source\PSoC4/PWM.c ****         return (result);
 743:Generated_Source\PSoC4/PWM.c ****     }
 264              		.loc 1 743 0
 265              		@ sp needed
 266 0006 7047     		bx	lr
 267              	.L27:
 268              		.align	2
 269              	.L26:
 270 0008 72000F40 		.word	1074724978
 271              		.cfi_endproc
 272              	.LFE11:
 273              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 274              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 275              		.align	2
 276              		.global	PWM_WriteControlRegister
 277              		.code	16
 278              		.thumb_func
 279              		.type	PWM_WriteControlRegister, %function
 280              	PWM_WriteControlRegister:
 281              	.LFB12:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 19


 746:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM.c ****     *
 750:Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM.c ****     *
 754:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM.c ****     *
 761:Generated_Source\PSoC4/PWM.c ****     * Return:
 762:Generated_Source\PSoC4/PWM.c ****     *  None
 763:Generated_Source\PSoC4/PWM.c ****     *
 764:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM.c ****     {
 282              		.loc 1 766 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL5:
 767:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 288              		.loc 1 767 0
 289 0000 014B     		ldr	r3, .L29
 290 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM.c ****     }
 291              		.loc 1 768 0
 292              		@ sp needed
 293 0004 7047     		bx	lr
 294              	.L30:
 295 0006 C046     		.align	2
 296              	.L29:
 297 0008 72000F40 		.word	1074724978
 298              		.cfi_endproc
 299              	.LFE12:
 300              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 301              		.section	.text.PWM_ReadCapture,"ax",%progbits
 302              		.align	2
 303              		.global	PWM_ReadCapture
 304              		.code	16
 305              		.thumb_func
 306              		.type	PWM_ReadCapture, %function
 307              	PWM_ReadCapture:
 308              	.LFB13:
 769:Generated_Source\PSoC4/PWM.c **** 
 770:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** 
 773:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM.c **** 
 775:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 20


 776:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM.c ****     *
 780:Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM.c ****     *
 783:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM.c ****     *  None
 785:Generated_Source\PSoC4/PWM.c ****     *
 786:Generated_Source\PSoC4/PWM.c ****     * Return:
 787:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM.c ****     *
 789:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM.c ****     {
 309              		.loc 1 791 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 792:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 314              		.loc 1 792 0
 315 0000 014B     		ldr	r3, .L32
 316 0002 1888     		ldrh	r0, [r3]
 317 0004 80B2     		uxth	r0, r0
 793:Generated_Source\PSoC4/PWM.c ****     }
 318              		.loc 1 793 0
 319              		@ sp needed
 320 0006 7047     		bx	lr
 321              	.L33:
 322              		.align	2
 323              	.L32:
 324 0008 A4100F40 		.word	1074729124
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 328              		.section	.text.PWM_ClearFIFO,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_ClearFIFO
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_ClearFIFO, %function
 334              	PWM_ClearFIFO:
 335              	.LFB6:
 454:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 336              		.loc 1 454 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/PWM.c ****             {
 344              		.loc 1 455 0
 345 0002 01E0     		b	.L35
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 21


 346              	.L36:
 457:Generated_Source\PSoC4/PWM.c ****             }
 347              		.loc 1 457 0
 348 0004 FFF7FEFF 		bl	PWM_ReadCapture
 349              	.LVL6:
 350              	.L35:
 455:Generated_Source\PSoC4/PWM.c ****             {
 351              		.loc 1 455 0
 352 0008 FFF7FEFF 		bl	PWM_ReadStatusRegister
 353              	.LVL7:
 354 000c C306     		lsls	r3, r0, #27
 355 000e F9D4     		bmi	.L36
 459:Generated_Source\PSoC4/PWM.c **** 
 356              		.loc 1 459 0
 357              		@ sp needed
 358 0010 10BD     		pop	{r4, pc}
 359              		.cfi_endproc
 360              	.LFE6:
 361              		.size	PWM_ClearFIFO, .-PWM_ClearFIFO
 362 0012 C046     		.section	.text.PWM_Init,"ax",%progbits
 363              		.align	2
 364              		.global	PWM_Init
 365              		.code	16
 366              		.thumb_func
 367              		.type	PWM_Init, %function
 368              	PWM_Init:
 369              	.LFB1:
  85:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 370              		.loc 1 85 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 10B5     		push	{r4, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 378              		.loc 1 117 0
 379 0002 1549     		ldr	r1, .L38
 380 0004 0B78     		ldrb	r3, [r1]
 381 0006 3F22     		movs	r2, #63
 382 0008 9343     		bics	r3, r2
 383              	.LVL8:
 119:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 384              		.loc 1 119 0
 385 000a 0922     		movs	r2, #9
 386 000c 1343     		orrs	r3, r2
 387              	.LVL9:
 388 000e DBB2     		uxtb	r3, r3
 389 0010 0B70     		strb	r3, [r1]
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 390              		.loc 1 129 0
 391 0012 1249     		ldr	r1, .L38+4
 392 0014 0A78     		ldrb	r2, [r1]
 393 0016 0123     		movs	r3, #1
 394 0018 1A43     		orrs	r2, r3
 395 001a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 22


 396 001c 0A70     		strb	r2, [r1]
 130:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 397              		.loc 1 130 0
 398 001e 104C     		ldr	r4, .L38+8
 399 0020 2278     		ldrb	r2, [r4]
 400 0022 1343     		orrs	r3, r2
 401 0024 DBB2     		uxtb	r3, r3
 402 0026 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 403              		.loc 1 133 0
 404 0028 6420     		movs	r0, #100
 405 002a FFF7FEFF 		bl	PWM_WriteCounter
 406              	.LVL10:
 136:Generated_Source\PSoC4/PWM.c **** 
 407              		.loc 1 136 0
 408 002e 6420     		movs	r0, #100
 409 0030 FFF7FEFF 		bl	PWM_WritePeriod
 410              	.LVL11:
 139:Generated_Source\PSoC4/PWM.c ****         #else
 411              		.loc 1 139 0
 412 0034 3220     		movs	r0, #50
 413 0036 FFF7FEFF 		bl	PWM_WriteCompare
 414              	.LVL12:
 154:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 415              		.loc 1 154 0
 416 003a 0120     		movs	r0, #1
 417 003c FFF7FEFF 		bl	PWM_SetInterruptMode
 418              	.LVL13:
 167:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 419              		.loc 1 167 0
 420 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 421              	.LVL14:
 169:Generated_Source\PSoC4/PWM.c **** 
 422              		.loc 1 169 0
 423 0044 2278     		ldrb	r2, [r4]
 424 0046 1023     		movs	r3, #16
 425 0048 1343     		orrs	r3, r2
 426 004a DBB2     		uxtb	r3, r3
 427 004c 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/PWM.c **** 
 428              		.loc 1 172 0
 429 004e FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL15:
 176:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 431              		.loc 1 176 0
 432 0052 FFF7FEFF 		bl	PWM_ClearFIFO
 433              	.LVL16:
 179:Generated_Source\PSoC4/PWM.c **** 
 434              		.loc 1 179 0
 435              		@ sp needed
 436 0056 10BD     		pop	{r4, pc}
 437              	.L39:
 438              		.align	2
 439              	.L38:
 440 0058 72000F40 		.word	1074724978
 441 005c 92000F40 		.word	1074725010
 442 0060 93000F40 		.word	1074725011
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 23


 443              		.cfi_endproc
 444              	.LFE1:
 445              		.size	PWM_Init, .-PWM_Init
 446              		.section	.text.PWM_Start,"ax",%progbits
 447              		.align	2
 448              		.global	PWM_Start
 449              		.code	16
 450              		.thumb_func
 451              		.type	PWM_Start, %function
 452              	PWM_Start:
 453              	.LFB0:
  56:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 454              		.loc 1 56 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458 0000 10B5     		push	{r4, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM.c ****     {
 462              		.loc 1 58 0
 463 0002 064B     		ldr	r3, .L42
 464 0004 1B78     		ldrb	r3, [r3]
 465 0006 002B     		cmp	r3, #0
 466 0008 04D1     		bne	.L41
  60:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 467              		.loc 1 60 0
 468 000a FFF7FEFF 		bl	PWM_Init
 469              	.LVL17:
  61:Generated_Source\PSoC4/PWM.c ****     }
 470              		.loc 1 61 0
 471 000e 0122     		movs	r2, #1
 472 0010 024B     		ldr	r3, .L42
 473 0012 1A70     		strb	r2, [r3]
 474              	.L41:
  63:Generated_Source\PSoC4/PWM.c **** 
 475              		.loc 1 63 0
 476 0014 FFF7FEFF 		bl	PWM_Enable
 477              	.LVL18:
  65:Generated_Source\PSoC4/PWM.c **** 
 478              		.loc 1 65 0
 479              		@ sp needed
 480 0018 10BD     		pop	{r4, pc}
 481              	.L43:
 482 001a C046     		.align	2
 483              	.L42:
 484 001c 00000000 		.word	.LANCHOR0
 485              		.cfi_endproc
 486              	.LFE0:
 487              		.size	PWM_Start, .-PWM_Start
 488              		.section	.text.PWM_ReadCompare,"ax",%progbits
 489              		.align	2
 490              		.global	PWM_ReadCompare
 491              		.code	16
 492              		.thumb_func
 493              		.type	PWM_ReadCompare, %function
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 24


 494              	PWM_ReadCompare:
 495              	.LFB14:
 794:Generated_Source\PSoC4/PWM.c **** 
 795:Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM.c **** 
 797:Generated_Source\PSoC4/PWM.c **** 
 798:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM.c **** 
 800:Generated_Source\PSoC4/PWM.c **** 
 801:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
 803:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM.c ****     *
 805:Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM.c ****     *
 809:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM.c ****     *  None
 811:Generated_Source\PSoC4/PWM.c ****     *
 812:Generated_Source\PSoC4/PWM.c ****     * Return:
 813:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM.c ****     *
 815:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM.c ****     {
 496              		.loc 1 817 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 818:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM.c ****         #else
 821:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 501              		.loc 1 821 0
 502 0000 014B     		ldr	r3, .L45
 503 0002 1888     		ldrh	r0, [r3]
 504 0004 80B2     		uxth	r0, r0
 822:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM.c ****     }
 505              		.loc 1 823 0
 506              		@ sp needed
 507 0006 7047     		bx	lr
 508              	.L46:
 509              		.align	2
 510              	.L45:
 511 0008 44100F40 		.word	1074729028
 512              		.cfi_endproc
 513              	.LFE14:
 514              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 515              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 516              		.align	2
 517              		.global	PWM_ReadPeriod
 518              		.code	16
 519              		.thumb_func
 520              		.type	PWM_ReadPeriod, %function
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 25


 521              	PWM_ReadPeriod:
 522              	.LFB15:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** #else
 826:Generated_Source\PSoC4/PWM.c **** 
 827:Generated_Source\PSoC4/PWM.c **** 
 828:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM.c ****     *
 832:Generated_Source\PSoC4/PWM.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM.c ****     *
 835:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM.c ****     *  None
 837:Generated_Source\PSoC4/PWM.c ****     *
 838:Generated_Source\PSoC4/PWM.c ****     * Return:
 839:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM.c ****     *
 841:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM.c ****     {
 844:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM.c ****     }
 846:Generated_Source\PSoC4/PWM.c **** 
 847:Generated_Source\PSoC4/PWM.c **** 
 848:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM.c ****     *
 852:Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM.c ****     *
 855:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM.c ****     *  None
 857:Generated_Source\PSoC4/PWM.c ****     *
 858:Generated_Source\PSoC4/PWM.c ****     * Return:
 859:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM.c ****     *
 861:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM.c ****     {
 864:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/PWM.c ****     }
 866:Generated_Source\PSoC4/PWM.c **** 
 867:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM.c **** 
 869:Generated_Source\PSoC4/PWM.c **** 
 870:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM.c **** *
 874:Generated_Source\PSoC4/PWM.c **** * Summary:
 875:Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM.c **** *
 877:Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 26


 879:Generated_Source\PSoC4/PWM.c **** *
 880:Generated_Source\PSoC4/PWM.c **** * Return:
 881:Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM.c **** *
 883:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM.c **** {
 523              		.loc 1 885 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 886:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM.c ****     #else
 889:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 528              		.loc 1 889 0
 529 0000 014B     		ldr	r3, .L48
 530 0002 1888     		ldrh	r0, [r3]
 531 0004 80B2     		uxth	r0, r0
 890:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM.c **** }
 532              		.loc 1 891 0
 533              		@ sp needed
 534 0006 7047     		bx	lr
 535              	.L49:
 536              		.align	2
 537              	.L48:
 538 0008 84100F40 		.word	1074729092
 539              		.cfi_endproc
 540              	.LFE15:
 541              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 542              		.global	PWM_initVar
 543              		.bss
 544              		.set	.LANCHOR0,. + 0
 545              		.type	PWM_initVar, %object
 546              		.size	PWM_initVar, 1
 547              	PWM_initVar:
 548 0000 00       		.space	1
 549              		.text
 550              	.Letext0:
 551              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 552              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 553              		.section	.debug_info,"",%progbits
 554              	.Ldebug_info0:
 555 0000 4D030000 		.4byte	0x34d
 556 0004 0400     		.2byte	0x4
 557 0006 00000000 		.4byte	.Ldebug_abbrev0
 558 000a 04       		.byte	0x4
 559 000b 01       		.uleb128 0x1
 560 000c CA010000 		.4byte	.LASF43
 561 0010 0C       		.byte	0xc
 562 0011 0F030000 		.4byte	.LASF44
 563 0015 51000000 		.4byte	.LASF45
 564 0019 00000000 		.4byte	.Ldebug_ranges0+0
 565 001d 00000000 		.4byte	0
 566 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 27


 567 0025 02       		.uleb128 0x2
 568 0026 01       		.byte	0x1
 569 0027 06       		.byte	0x6
 570 0028 50030000 		.4byte	.LASF0
 571 002c 02       		.uleb128 0x2
 572 002d 01       		.byte	0x1
 573 002e 08       		.byte	0x8
 574 002f 1B010000 		.4byte	.LASF1
 575 0033 02       		.uleb128 0x2
 576 0034 02       		.byte	0x2
 577 0035 05       		.byte	0x5
 578 0036 DD020000 		.4byte	.LASF2
 579 003a 02       		.uleb128 0x2
 580 003b 02       		.byte	0x2
 581 003c 07       		.byte	0x7
 582 003d 3E000000 		.4byte	.LASF3
 583 0041 02       		.uleb128 0x2
 584 0042 04       		.byte	0x4
 585 0043 05       		.byte	0x5
 586 0044 01030000 		.4byte	.LASF4
 587 0048 02       		.uleb128 0x2
 588 0049 04       		.byte	0x4
 589 004a 07       		.byte	0x7
 590 004b 2E010000 		.4byte	.LASF5
 591 004f 02       		.uleb128 0x2
 592 0050 08       		.byte	0x8
 593 0051 05       		.byte	0x5
 594 0052 86020000 		.4byte	.LASF6
 595 0056 02       		.uleb128 0x2
 596 0057 08       		.byte	0x8
 597 0058 07       		.byte	0x7
 598 0059 04010000 		.4byte	.LASF7
 599 005d 03       		.uleb128 0x3
 600 005e 04       		.byte	0x4
 601 005f 05       		.byte	0x5
 602 0060 696E7400 		.ascii	"int\000"
 603 0064 02       		.uleb128 0x2
 604 0065 04       		.byte	0x4
 605 0066 07       		.byte	0x7
 606 0067 A0010000 		.4byte	.LASF8
 607 006b 04       		.uleb128 0x4
 608 006c 50010000 		.4byte	.LASF9
 609 0070 02       		.byte	0x2
 610 0071 FB01     		.2byte	0x1fb
 611 0073 2C000000 		.4byte	0x2c
 612 0077 04       		.uleb128 0x4
 613 0078 76010000 		.4byte	.LASF10
 614 007c 02       		.byte	0x2
 615 007d FC01     		.2byte	0x1fc
 616 007f 3A000000 		.4byte	0x3a
 617 0083 02       		.uleb128 0x2
 618 0084 04       		.byte	0x4
 619 0085 04       		.byte	0x4
 620 0086 F6000000 		.4byte	.LASF11
 621 008a 02       		.uleb128 0x2
 622 008b 08       		.byte	0x8
 623 008c 04       		.byte	0x4
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 28


 624 008d 5E010000 		.4byte	.LASF12
 625 0091 02       		.uleb128 0x2
 626 0092 01       		.byte	0x1
 627 0093 08       		.byte	0x8
 628 0094 0A030000 		.4byte	.LASF13
 629 0098 04       		.uleb128 0x4
 630 0099 29010000 		.4byte	.LASF14
 631 009d 02       		.byte	0x2
 632 009e A502     		.2byte	0x2a5
 633 00a0 A4000000 		.4byte	0xa4
 634 00a4 05       		.uleb128 0x5
 635 00a5 6B000000 		.4byte	0x6b
 636 00a9 04       		.uleb128 0x4
 637 00aa 00000000 		.4byte	.LASF15
 638 00ae 02       		.byte	0x2
 639 00af A602     		.2byte	0x2a6
 640 00b1 B5000000 		.4byte	0xb5
 641 00b5 05       		.uleb128 0x5
 642 00b6 77000000 		.4byte	0x77
 643 00ba 02       		.uleb128 0x2
 644 00bb 08       		.byte	0x8
 645 00bc 04       		.byte	0x4
 646 00bd 2C030000 		.4byte	.LASF16
 647 00c1 02       		.uleb128 0x2
 648 00c2 04       		.byte	0x4
 649 00c3 07       		.byte	0x7
 650 00c4 7D020000 		.4byte	.LASF17
 651 00c8 06       		.uleb128 0x6
 652 00c9 64030000 		.4byte	.LASF18
 653 00cd 01       		.byte	0x1
 654 00ce C7       		.byte	0xc7
 655 00cf 00000000 		.4byte	.LFB2
 656 00d3 14000000 		.4byte	.LFE2-.LFB2
 657 00d7 01       		.uleb128 0x1
 658 00d8 9C       		.byte	0x9c
 659 00d9 06       		.uleb128 0x6
 660 00da F8020000 		.4byte	.LASF19
 661 00de 01       		.byte	0x1
 662 00df E9       		.byte	0xe9
 663 00e0 00000000 		.4byte	.LFB3
 664 00e4 10000000 		.4byte	.LFE3-.LFB3
 665 00e8 01       		.uleb128 0x1
 666 00e9 9C       		.byte	0x9c
 667 00ea 07       		.uleb128 0x7
 668 00eb E7020000 		.4byte	.LASF20
 669 00ef 01       		.byte	0x1
 670 00f0 9301     		.2byte	0x193
 671 00f2 00000000 		.4byte	.LFB4
 672 00f6 0C000000 		.4byte	.LFE4-.LFB4
 673 00fa 01       		.uleb128 0x1
 674 00fb 9C       		.byte	0x9c
 675 00fc 0F010000 		.4byte	0x10f
 676 0100 08       		.uleb128 0x8
 677 0101 FC000000 		.4byte	.LASF22
 678 0105 01       		.byte	0x1
 679 0106 9301     		.2byte	0x193
 680 0108 77000000 		.4byte	0x77
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 29


 681 010c 01       		.uleb128 0x1
 682 010d 50       		.byte	0x50
 683 010e 00       		.byte	0
 684 010f 09       		.uleb128 0x9
 685 0110 40010000 		.4byte	.LASF28
 686 0114 01       		.byte	0x1
 687 0115 A901     		.2byte	0x1a9
 688 0117 77000000 		.4byte	0x77
 689 011b 00000000 		.4byte	.LFB5
 690 011f 14000000 		.4byte	.LFE5-.LFB5
 691 0123 01       		.uleb128 0x1
 692 0124 9C       		.byte	0x9c
 693 0125 07       		.uleb128 0x7
 694 0126 58020000 		.4byte	.LASF21
 695 012a 01       		.byte	0x1
 696 012b E201     		.2byte	0x1e2
 697 012d 00000000 		.4byte	.LFB7
 698 0131 0C000000 		.4byte	.LFE7-.LFB7
 699 0135 01       		.uleb128 0x1
 700 0136 9C       		.byte	0x9c
 701 0137 4A010000 		.4byte	0x14a
 702 013b 08       		.uleb128 0x8
 703 013c 2D000000 		.4byte	.LASF23
 704 0140 01       		.byte	0x1
 705 0141 E201     		.2byte	0x1e2
 706 0143 77000000 		.4byte	0x77
 707 0147 01       		.uleb128 0x1
 708 0148 50       		.byte	0x50
 709 0149 00       		.byte	0
 710 014a 07       		.uleb128 0x7
 711 014b 65010000 		.4byte	.LASF24
 712 014f 01       		.byte	0x1
 713 0150 0402     		.2byte	0x204
 714 0152 00000000 		.4byte	.LFB8
 715 0156 0C000000 		.4byte	.LFE8-.LFB8
 716 015a 01       		.uleb128 0x1
 717 015b 9C       		.byte	0x9c
 718 015c 6F010000 		.4byte	0x16f
 719 0160 08       		.uleb128 0x8
 720 0161 5C030000 		.4byte	.LASF25
 721 0165 01       		.byte	0x1
 722 0166 0402     		.2byte	0x204
 723 0168 77000000 		.4byte	0x77
 724 016c 01       		.uleb128 0x1
 725 016d 50       		.byte	0x50
 726 016e 00       		.byte	0
 727 016f 07       		.uleb128 0x7
 728 0170 68020000 		.4byte	.LASF26
 729 0174 01       		.byte	0x1
 730 0175 AC02     		.2byte	0x2ac
 731 0177 00000000 		.4byte	.LFB9
 732 017b 0C000000 		.4byte	.LFE9-.LFB9
 733 017f 01       		.uleb128 0x1
 734 0180 9C       		.byte	0x9c
 735 0181 94010000 		.4byte	0x194
 736 0185 08       		.uleb128 0x8
 737 0186 94020000 		.4byte	.LASF27
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 30


 738 018a 01       		.byte	0x1
 739 018b AC02     		.2byte	0x2ac
 740 018d 6B000000 		.4byte	0x6b
 741 0191 01       		.uleb128 0x1
 742 0192 50       		.byte	0x50
 743 0193 00       		.byte	0
 744 0194 09       		.uleb128 0x9
 745 0195 6F030000 		.4byte	.LASF29
 746 0199 01       		.byte	0x1
 747 019a C702     		.2byte	0x2c7
 748 019c 6B000000 		.4byte	0x6b
 749 01a0 00000000 		.4byte	.LFB10
 750 01a4 0C000000 		.4byte	.LFE10-.LFB10
 751 01a8 01       		.uleb128 0x1
 752 01a9 9C       		.byte	0x9c
 753 01aa 0A       		.uleb128 0xa
 754 01ab 38030000 		.4byte	.LASF46
 755 01af 01       		.byte	0x1
 756 01b0 E102     		.2byte	0x2e1
 757 01b2 6B000000 		.4byte	0x6b
 758 01b6 00000000 		.4byte	.LFB11
 759 01ba 0C000000 		.4byte	.LFE11-.LFB11
 760 01be 01       		.uleb128 0x1
 761 01bf 9C       		.byte	0x9c
 762 01c0 D3010000 		.4byte	0x1d3
 763 01c4 0B       		.uleb128 0xb
 764 01c5 C3010000 		.4byte	.LASF35
 765 01c9 01       		.byte	0x1
 766 01ca E302     		.2byte	0x2e3
 767 01cc 6B000000 		.4byte	0x6b
 768 01d0 01       		.uleb128 0x1
 769 01d1 50       		.byte	0x50
 770 01d2 00       		.byte	0
 771 01d3 07       		.uleb128 0x7
 772 01d4 A2020000 		.4byte	.LASF30
 773 01d8 01       		.byte	0x1
 774 01d9 FD02     		.2byte	0x2fd
 775 01db 00000000 		.4byte	.LFB12
 776 01df 0C000000 		.4byte	.LFE12-.LFB12
 777 01e3 01       		.uleb128 0x1
 778 01e4 9C       		.byte	0x9c
 779 01e5 F8010000 		.4byte	0x1f8
 780 01e9 08       		.uleb128 0x8
 781 01ea 56010000 		.4byte	.LASF31
 782 01ee 01       		.byte	0x1
 783 01ef FD02     		.2byte	0x2fd
 784 01f1 6B000000 		.4byte	0x6b
 785 01f5 01       		.uleb128 0x1
 786 01f6 50       		.byte	0x50
 787 01f7 00       		.byte	0
 788 01f8 09       		.uleb128 0x9
 789 01f9 E6000000 		.4byte	.LASF32
 790 01fd 01       		.byte	0x1
 791 01fe 1603     		.2byte	0x316
 792 0200 77000000 		.4byte	0x77
 793 0204 00000000 		.4byte	.LFB13
 794 0208 0C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 31


 795 020c 01       		.uleb128 0x1
 796 020d 9C       		.byte	0x9c
 797 020e 07       		.uleb128 0x7
 798 020f 1F000000 		.4byte	.LASF33
 799 0213 01       		.byte	0x1
 800 0214 C501     		.2byte	0x1c5
 801 0216 00000000 		.4byte	.LFB6
 802 021a 12000000 		.4byte	.LFE6-.LFB6
 803 021e 01       		.uleb128 0x1
 804 021f 9C       		.byte	0x9c
 805 0220 37020000 		.4byte	0x237
 806 0224 0C       		.uleb128 0xc
 807 0225 08000000 		.4byte	.LVL6
 808 0229 F8010000 		.4byte	0x1f8
 809 022d 0C       		.uleb128 0xc
 810 022e 0C000000 		.4byte	.LVL7
 811 0232 94010000 		.4byte	0x194
 812 0236 00       		.byte	0
 813 0237 0D       		.uleb128 0xd
 814 0238 16000000 		.4byte	.LASF34
 815 023c 01       		.byte	0x1
 816 023d 54       		.byte	0x54
 817 023e 00000000 		.4byte	.LFB1
 818 0242 64000000 		.4byte	.LFE1-.LFB1
 819 0246 01       		.uleb128 0x1
 820 0247 9C       		.byte	0x9c
 821 0248 D5020000 		.4byte	0x2d5
 822 024c 0E       		.uleb128 0xe
 823 024d 86030000 		.4byte	.LASF36
 824 0251 01       		.byte	0x1
 825 0252 57       		.byte	0x57
 826 0253 6B000000 		.4byte	0x6b
 827 0257 00000000 		.4byte	.LLST0
 828 025b 0E       		.uleb128 0xe
 829 025c BB020000 		.4byte	.LASF37
 830 0260 01       		.byte	0x1
 831 0261 5D       		.byte	0x5d
 832 0262 6B000000 		.4byte	0x6b
 833 0266 13000000 		.4byte	.LLST1
 834 026a 0F       		.uleb128 0xf
 835 026b 2E000000 		.4byte	.LVL10
 836 026f EA000000 		.4byte	0xea
 837 0273 7E020000 		.4byte	0x27e
 838 0277 10       		.uleb128 0x10
 839 0278 01       		.uleb128 0x1
 840 0279 50       		.byte	0x50
 841 027a 02       		.uleb128 0x2
 842 027b 08       		.byte	0x8
 843 027c 64       		.byte	0x64
 844 027d 00       		.byte	0
 845 027e 0F       		.uleb128 0xf
 846 027f 34000000 		.4byte	.LVL11
 847 0283 25010000 		.4byte	0x125
 848 0287 92020000 		.4byte	0x292
 849 028b 10       		.uleb128 0x10
 850 028c 01       		.uleb128 0x1
 851 028d 50       		.byte	0x50
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 32


 852 028e 02       		.uleb128 0x2
 853 028f 08       		.byte	0x8
 854 0290 64       		.byte	0x64
 855 0291 00       		.byte	0
 856 0292 0F       		.uleb128 0xf
 857 0293 3A000000 		.4byte	.LVL12
 858 0297 4A010000 		.4byte	0x14a
 859 029b A6020000 		.4byte	0x2a6
 860 029f 10       		.uleb128 0x10
 861 02a0 01       		.uleb128 0x1
 862 02a1 50       		.byte	0x50
 863 02a2 02       		.uleb128 0x2
 864 02a3 08       		.byte	0x8
 865 02a4 32       		.byte	0x32
 866 02a5 00       		.byte	0
 867 02a6 0F       		.uleb128 0xf
 868 02a7 40000000 		.4byte	.LVL13
 869 02ab 6F010000 		.4byte	0x16f
 870 02af B9020000 		.4byte	0x2b9
 871 02b3 10       		.uleb128 0x10
 872 02b4 01       		.uleb128 0x1
 873 02b5 50       		.byte	0x50
 874 02b6 01       		.uleb128 0x1
 875 02b7 31       		.byte	0x31
 876 02b8 00       		.byte	0
 877 02b9 0C       		.uleb128 0xc
 878 02ba 44000000 		.4byte	.LVL14
 879 02be 3A030000 		.4byte	0x33a
 880 02c2 0C       		.uleb128 0xc
 881 02c3 52000000 		.4byte	.LVL15
 882 02c7 45030000 		.4byte	0x345
 883 02cb 0C       		.uleb128 0xc
 884 02cc 56000000 		.4byte	.LVL16
 885 02d0 0E020000 		.4byte	0x20e
 886 02d4 00       		.byte	0
 887 02d5 0D       		.uleb128 0xd
 888 02d6 34000000 		.4byte	.LASF38
 889 02da 01       		.byte	0x1
 890 02db 37       		.byte	0x37
 891 02dc 00000000 		.4byte	.LFB0
 892 02e0 20000000 		.4byte	.LFE0-.LFB0
 893 02e4 01       		.uleb128 0x1
 894 02e5 9C       		.byte	0x9c
 895 02e6 FD020000 		.4byte	0x2fd
 896 02ea 0C       		.uleb128 0xc
 897 02eb 0E000000 		.4byte	.LVL17
 898 02ef 37020000 		.4byte	0x237
 899 02f3 0C       		.uleb128 0xc
 900 02f4 18000000 		.4byte	.LVL18
 901 02f8 C8000000 		.4byte	0xc8
 902 02fc 00       		.byte	0
 903 02fd 09       		.uleb128 0x9
 904 02fe 06000000 		.4byte	.LASF39
 905 0302 01       		.byte	0x1
 906 0303 3003     		.2byte	0x330
 907 0305 77000000 		.4byte	0x77
 908 0309 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 33


 909 030d 0C000000 		.4byte	.LFE14-.LFB14
 910 0311 01       		.uleb128 0x1
 911 0312 9C       		.byte	0x9c
 912 0313 09       		.uleb128 0x9
 913 0314 CE020000 		.4byte	.LASF40
 914 0318 01       		.byte	0x1
 915 0319 7403     		.2byte	0x374
 916 031b 77000000 		.4byte	0x77
 917 031f 00000000 		.4byte	.LFB15
 918 0323 0C000000 		.4byte	.LFE15-.LFB15
 919 0327 01       		.uleb128 0x1
 920 0328 9C       		.byte	0x9c
 921 0329 11       		.uleb128 0x11
 922 032a 7D010000 		.4byte	.LASF47
 923 032e 01       		.byte	0x1
 924 032f 20       		.byte	0x20
 925 0330 6B000000 		.4byte	0x6b
 926 0334 05       		.uleb128 0x5
 927 0335 03       		.byte	0x3
 928 0336 00000000 		.4byte	PWM_initVar
 929 033a 12       		.uleb128 0x12
 930 033b 89010000 		.4byte	.LASF41
 931 033f 89010000 		.4byte	.LASF41
 932 0343 03       		.byte	0x3
 933 0344 F8       		.byte	0xf8
 934 0345 12       		.uleb128 0x12
 935 0346 AD010000 		.4byte	.LASF42
 936 034a AD010000 		.4byte	.LASF42
 937 034e 03       		.byte	0x3
 938 034f F9       		.byte	0xf9
 939 0350 00       		.byte	0
 940              		.section	.debug_abbrev,"",%progbits
 941              	.Ldebug_abbrev0:
 942 0000 01       		.uleb128 0x1
 943 0001 11       		.uleb128 0x11
 944 0002 01       		.byte	0x1
 945 0003 25       		.uleb128 0x25
 946 0004 0E       		.uleb128 0xe
 947 0005 13       		.uleb128 0x13
 948 0006 0B       		.uleb128 0xb
 949 0007 03       		.uleb128 0x3
 950 0008 0E       		.uleb128 0xe
 951 0009 1B       		.uleb128 0x1b
 952 000a 0E       		.uleb128 0xe
 953 000b 55       		.uleb128 0x55
 954 000c 17       		.uleb128 0x17
 955 000d 11       		.uleb128 0x11
 956 000e 01       		.uleb128 0x1
 957 000f 10       		.uleb128 0x10
 958 0010 17       		.uleb128 0x17
 959 0011 00       		.byte	0
 960 0012 00       		.byte	0
 961 0013 02       		.uleb128 0x2
 962 0014 24       		.uleb128 0x24
 963 0015 00       		.byte	0
 964 0016 0B       		.uleb128 0xb
 965 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 34


 966 0018 3E       		.uleb128 0x3e
 967 0019 0B       		.uleb128 0xb
 968 001a 03       		.uleb128 0x3
 969 001b 0E       		.uleb128 0xe
 970 001c 00       		.byte	0
 971 001d 00       		.byte	0
 972 001e 03       		.uleb128 0x3
 973 001f 24       		.uleb128 0x24
 974 0020 00       		.byte	0
 975 0021 0B       		.uleb128 0xb
 976 0022 0B       		.uleb128 0xb
 977 0023 3E       		.uleb128 0x3e
 978 0024 0B       		.uleb128 0xb
 979 0025 03       		.uleb128 0x3
 980 0026 08       		.uleb128 0x8
 981 0027 00       		.byte	0
 982 0028 00       		.byte	0
 983 0029 04       		.uleb128 0x4
 984 002a 16       		.uleb128 0x16
 985 002b 00       		.byte	0
 986 002c 03       		.uleb128 0x3
 987 002d 0E       		.uleb128 0xe
 988 002e 3A       		.uleb128 0x3a
 989 002f 0B       		.uleb128 0xb
 990 0030 3B       		.uleb128 0x3b
 991 0031 05       		.uleb128 0x5
 992 0032 49       		.uleb128 0x49
 993 0033 13       		.uleb128 0x13
 994 0034 00       		.byte	0
 995 0035 00       		.byte	0
 996 0036 05       		.uleb128 0x5
 997 0037 35       		.uleb128 0x35
 998 0038 00       		.byte	0
 999 0039 49       		.uleb128 0x49
 1000 003a 13       		.uleb128 0x13
 1001 003b 00       		.byte	0
 1002 003c 00       		.byte	0
 1003 003d 06       		.uleb128 0x6
 1004 003e 2E       		.uleb128 0x2e
 1005 003f 00       		.byte	0
 1006 0040 3F       		.uleb128 0x3f
 1007 0041 19       		.uleb128 0x19
 1008 0042 03       		.uleb128 0x3
 1009 0043 0E       		.uleb128 0xe
 1010 0044 3A       		.uleb128 0x3a
 1011 0045 0B       		.uleb128 0xb
 1012 0046 3B       		.uleb128 0x3b
 1013 0047 0B       		.uleb128 0xb
 1014 0048 27       		.uleb128 0x27
 1015 0049 19       		.uleb128 0x19
 1016 004a 11       		.uleb128 0x11
 1017 004b 01       		.uleb128 0x1
 1018 004c 12       		.uleb128 0x12
 1019 004d 06       		.uleb128 0x6
 1020 004e 40       		.uleb128 0x40
 1021 004f 18       		.uleb128 0x18
 1022 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 35


 1023 0052 19       		.uleb128 0x19
 1024 0053 00       		.byte	0
 1025 0054 00       		.byte	0
 1026 0055 07       		.uleb128 0x7
 1027 0056 2E       		.uleb128 0x2e
 1028 0057 01       		.byte	0x1
 1029 0058 3F       		.uleb128 0x3f
 1030 0059 19       		.uleb128 0x19
 1031 005a 03       		.uleb128 0x3
 1032 005b 0E       		.uleb128 0xe
 1033 005c 3A       		.uleb128 0x3a
 1034 005d 0B       		.uleb128 0xb
 1035 005e 3B       		.uleb128 0x3b
 1036 005f 05       		.uleb128 0x5
 1037 0060 27       		.uleb128 0x27
 1038 0061 19       		.uleb128 0x19
 1039 0062 11       		.uleb128 0x11
 1040 0063 01       		.uleb128 0x1
 1041 0064 12       		.uleb128 0x12
 1042 0065 06       		.uleb128 0x6
 1043 0066 40       		.uleb128 0x40
 1044 0067 18       		.uleb128 0x18
 1045 0068 9742     		.uleb128 0x2117
 1046 006a 19       		.uleb128 0x19
 1047 006b 01       		.uleb128 0x1
 1048 006c 13       		.uleb128 0x13
 1049 006d 00       		.byte	0
 1050 006e 00       		.byte	0
 1051 006f 08       		.uleb128 0x8
 1052 0070 05       		.uleb128 0x5
 1053 0071 00       		.byte	0
 1054 0072 03       		.uleb128 0x3
 1055 0073 0E       		.uleb128 0xe
 1056 0074 3A       		.uleb128 0x3a
 1057 0075 0B       		.uleb128 0xb
 1058 0076 3B       		.uleb128 0x3b
 1059 0077 05       		.uleb128 0x5
 1060 0078 49       		.uleb128 0x49
 1061 0079 13       		.uleb128 0x13
 1062 007a 02       		.uleb128 0x2
 1063 007b 18       		.uleb128 0x18
 1064 007c 00       		.byte	0
 1065 007d 00       		.byte	0
 1066 007e 09       		.uleb128 0x9
 1067 007f 2E       		.uleb128 0x2e
 1068 0080 00       		.byte	0
 1069 0081 3F       		.uleb128 0x3f
 1070 0082 19       		.uleb128 0x19
 1071 0083 03       		.uleb128 0x3
 1072 0084 0E       		.uleb128 0xe
 1073 0085 3A       		.uleb128 0x3a
 1074 0086 0B       		.uleb128 0xb
 1075 0087 3B       		.uleb128 0x3b
 1076 0088 05       		.uleb128 0x5
 1077 0089 27       		.uleb128 0x27
 1078 008a 19       		.uleb128 0x19
 1079 008b 49       		.uleb128 0x49
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 36


 1080 008c 13       		.uleb128 0x13
 1081 008d 11       		.uleb128 0x11
 1082 008e 01       		.uleb128 0x1
 1083 008f 12       		.uleb128 0x12
 1084 0090 06       		.uleb128 0x6
 1085 0091 40       		.uleb128 0x40
 1086 0092 18       		.uleb128 0x18
 1087 0093 9742     		.uleb128 0x2117
 1088 0095 19       		.uleb128 0x19
 1089 0096 00       		.byte	0
 1090 0097 00       		.byte	0
 1091 0098 0A       		.uleb128 0xa
 1092 0099 2E       		.uleb128 0x2e
 1093 009a 01       		.byte	0x1
 1094 009b 3F       		.uleb128 0x3f
 1095 009c 19       		.uleb128 0x19
 1096 009d 03       		.uleb128 0x3
 1097 009e 0E       		.uleb128 0xe
 1098 009f 3A       		.uleb128 0x3a
 1099 00a0 0B       		.uleb128 0xb
 1100 00a1 3B       		.uleb128 0x3b
 1101 00a2 05       		.uleb128 0x5
 1102 00a3 27       		.uleb128 0x27
 1103 00a4 19       		.uleb128 0x19
 1104 00a5 49       		.uleb128 0x49
 1105 00a6 13       		.uleb128 0x13
 1106 00a7 11       		.uleb128 0x11
 1107 00a8 01       		.uleb128 0x1
 1108 00a9 12       		.uleb128 0x12
 1109 00aa 06       		.uleb128 0x6
 1110 00ab 40       		.uleb128 0x40
 1111 00ac 18       		.uleb128 0x18
 1112 00ad 9742     		.uleb128 0x2117
 1113 00af 19       		.uleb128 0x19
 1114 00b0 01       		.uleb128 0x1
 1115 00b1 13       		.uleb128 0x13
 1116 00b2 00       		.byte	0
 1117 00b3 00       		.byte	0
 1118 00b4 0B       		.uleb128 0xb
 1119 00b5 34       		.uleb128 0x34
 1120 00b6 00       		.byte	0
 1121 00b7 03       		.uleb128 0x3
 1122 00b8 0E       		.uleb128 0xe
 1123 00b9 3A       		.uleb128 0x3a
 1124 00ba 0B       		.uleb128 0xb
 1125 00bb 3B       		.uleb128 0x3b
 1126 00bc 05       		.uleb128 0x5
 1127 00bd 49       		.uleb128 0x49
 1128 00be 13       		.uleb128 0x13
 1129 00bf 02       		.uleb128 0x2
 1130 00c0 18       		.uleb128 0x18
 1131 00c1 00       		.byte	0
 1132 00c2 00       		.byte	0
 1133 00c3 0C       		.uleb128 0xc
 1134 00c4 898201   		.uleb128 0x4109
 1135 00c7 00       		.byte	0
 1136 00c8 11       		.uleb128 0x11
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 37


 1137 00c9 01       		.uleb128 0x1
 1138 00ca 31       		.uleb128 0x31
 1139 00cb 13       		.uleb128 0x13
 1140 00cc 00       		.byte	0
 1141 00cd 00       		.byte	0
 1142 00ce 0D       		.uleb128 0xd
 1143 00cf 2E       		.uleb128 0x2e
 1144 00d0 01       		.byte	0x1
 1145 00d1 3F       		.uleb128 0x3f
 1146 00d2 19       		.uleb128 0x19
 1147 00d3 03       		.uleb128 0x3
 1148 00d4 0E       		.uleb128 0xe
 1149 00d5 3A       		.uleb128 0x3a
 1150 00d6 0B       		.uleb128 0xb
 1151 00d7 3B       		.uleb128 0x3b
 1152 00d8 0B       		.uleb128 0xb
 1153 00d9 27       		.uleb128 0x27
 1154 00da 19       		.uleb128 0x19
 1155 00db 11       		.uleb128 0x11
 1156 00dc 01       		.uleb128 0x1
 1157 00dd 12       		.uleb128 0x12
 1158 00de 06       		.uleb128 0x6
 1159 00df 40       		.uleb128 0x40
 1160 00e0 18       		.uleb128 0x18
 1161 00e1 9742     		.uleb128 0x2117
 1162 00e3 19       		.uleb128 0x19
 1163 00e4 01       		.uleb128 0x1
 1164 00e5 13       		.uleb128 0x13
 1165 00e6 00       		.byte	0
 1166 00e7 00       		.byte	0
 1167 00e8 0E       		.uleb128 0xe
 1168 00e9 34       		.uleb128 0x34
 1169 00ea 00       		.byte	0
 1170 00eb 03       		.uleb128 0x3
 1171 00ec 0E       		.uleb128 0xe
 1172 00ed 3A       		.uleb128 0x3a
 1173 00ee 0B       		.uleb128 0xb
 1174 00ef 3B       		.uleb128 0x3b
 1175 00f0 0B       		.uleb128 0xb
 1176 00f1 49       		.uleb128 0x49
 1177 00f2 13       		.uleb128 0x13
 1178 00f3 02       		.uleb128 0x2
 1179 00f4 17       		.uleb128 0x17
 1180 00f5 00       		.byte	0
 1181 00f6 00       		.byte	0
 1182 00f7 0F       		.uleb128 0xf
 1183 00f8 898201   		.uleb128 0x4109
 1184 00fb 01       		.byte	0x1
 1185 00fc 11       		.uleb128 0x11
 1186 00fd 01       		.uleb128 0x1
 1187 00fe 31       		.uleb128 0x31
 1188 00ff 13       		.uleb128 0x13
 1189 0100 01       		.uleb128 0x1
 1190 0101 13       		.uleb128 0x13
 1191 0102 00       		.byte	0
 1192 0103 00       		.byte	0
 1193 0104 10       		.uleb128 0x10
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 38


 1194 0105 8A8201   		.uleb128 0x410a
 1195 0108 00       		.byte	0
 1196 0109 02       		.uleb128 0x2
 1197 010a 18       		.uleb128 0x18
 1198 010b 9142     		.uleb128 0x2111
 1199 010d 18       		.uleb128 0x18
 1200 010e 00       		.byte	0
 1201 010f 00       		.byte	0
 1202 0110 11       		.uleb128 0x11
 1203 0111 34       		.uleb128 0x34
 1204 0112 00       		.byte	0
 1205 0113 03       		.uleb128 0x3
 1206 0114 0E       		.uleb128 0xe
 1207 0115 3A       		.uleb128 0x3a
 1208 0116 0B       		.uleb128 0xb
 1209 0117 3B       		.uleb128 0x3b
 1210 0118 0B       		.uleb128 0xb
 1211 0119 49       		.uleb128 0x49
 1212 011a 13       		.uleb128 0x13
 1213 011b 3F       		.uleb128 0x3f
 1214 011c 19       		.uleb128 0x19
 1215 011d 02       		.uleb128 0x2
 1216 011e 18       		.uleb128 0x18
 1217 011f 00       		.byte	0
 1218 0120 00       		.byte	0
 1219 0121 12       		.uleb128 0x12
 1220 0122 2E       		.uleb128 0x2e
 1221 0123 00       		.byte	0
 1222 0124 3F       		.uleb128 0x3f
 1223 0125 19       		.uleb128 0x19
 1224 0126 3C       		.uleb128 0x3c
 1225 0127 19       		.uleb128 0x19
 1226 0128 6E       		.uleb128 0x6e
 1227 0129 0E       		.uleb128 0xe
 1228 012a 03       		.uleb128 0x3
 1229 012b 0E       		.uleb128 0xe
 1230 012c 3A       		.uleb128 0x3a
 1231 012d 0B       		.uleb128 0xb
 1232 012e 3B       		.uleb128 0x3b
 1233 012f 0B       		.uleb128 0xb
 1234 0130 00       		.byte	0
 1235 0131 00       		.byte	0
 1236 0132 00       		.byte	0
 1237              		.section	.debug_loc,"",%progbits
 1238              	.Ldebug_loc0:
 1239              	.LLST0:
 1240 0000 0A000000 		.4byte	.LVL8
 1241 0004 0E000000 		.4byte	.LVL9
 1242 0008 0100     		.2byte	0x1
 1243 000a 53       		.byte	0x53
 1244 000b 00000000 		.4byte	0
 1245 000f 00000000 		.4byte	0
 1246              	.LLST1:
 1247 0013 44000000 		.4byte	.LVL14
 1248 0017 51000000 		.4byte	.LVL15-1
 1249 001b 0100     		.2byte	0x1
 1250 001d 50       		.byte	0x50
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 39


 1251 001e 00000000 		.4byte	0
 1252 0022 00000000 		.4byte	0
 1253              		.section	.debug_aranges,"",%progbits
 1254 0000 94000000 		.4byte	0x94
 1255 0004 0200     		.2byte	0x2
 1256 0006 00000000 		.4byte	.Ldebug_info0
 1257 000a 04       		.byte	0x4
 1258 000b 00       		.byte	0
 1259 000c 0000     		.2byte	0
 1260 000e 0000     		.2byte	0
 1261 0010 00000000 		.4byte	.LFB2
 1262 0014 14000000 		.4byte	.LFE2-.LFB2
 1263 0018 00000000 		.4byte	.LFB3
 1264 001c 10000000 		.4byte	.LFE3-.LFB3
 1265 0020 00000000 		.4byte	.LFB4
 1266 0024 0C000000 		.4byte	.LFE4-.LFB4
 1267 0028 00000000 		.4byte	.LFB5
 1268 002c 14000000 		.4byte	.LFE5-.LFB5
 1269 0030 00000000 		.4byte	.LFB7
 1270 0034 0C000000 		.4byte	.LFE7-.LFB7
 1271 0038 00000000 		.4byte	.LFB8
 1272 003c 0C000000 		.4byte	.LFE8-.LFB8
 1273 0040 00000000 		.4byte	.LFB9
 1274 0044 0C000000 		.4byte	.LFE9-.LFB9
 1275 0048 00000000 		.4byte	.LFB10
 1276 004c 0C000000 		.4byte	.LFE10-.LFB10
 1277 0050 00000000 		.4byte	.LFB11
 1278 0054 0C000000 		.4byte	.LFE11-.LFB11
 1279 0058 00000000 		.4byte	.LFB12
 1280 005c 0C000000 		.4byte	.LFE12-.LFB12
 1281 0060 00000000 		.4byte	.LFB13
 1282 0064 0C000000 		.4byte	.LFE13-.LFB13
 1283 0068 00000000 		.4byte	.LFB6
 1284 006c 12000000 		.4byte	.LFE6-.LFB6
 1285 0070 00000000 		.4byte	.LFB1
 1286 0074 64000000 		.4byte	.LFE1-.LFB1
 1287 0078 00000000 		.4byte	.LFB0
 1288 007c 20000000 		.4byte	.LFE0-.LFB0
 1289 0080 00000000 		.4byte	.LFB14
 1290 0084 0C000000 		.4byte	.LFE14-.LFB14
 1291 0088 00000000 		.4byte	.LFB15
 1292 008c 0C000000 		.4byte	.LFE15-.LFB15
 1293 0090 00000000 		.4byte	0
 1294 0094 00000000 		.4byte	0
 1295              		.section	.debug_ranges,"",%progbits
 1296              	.Ldebug_ranges0:
 1297 0000 00000000 		.4byte	.LFB2
 1298 0004 14000000 		.4byte	.LFE2
 1299 0008 00000000 		.4byte	.LFB3
 1300 000c 10000000 		.4byte	.LFE3
 1301 0010 00000000 		.4byte	.LFB4
 1302 0014 0C000000 		.4byte	.LFE4
 1303 0018 00000000 		.4byte	.LFB5
 1304 001c 14000000 		.4byte	.LFE5
 1305 0020 00000000 		.4byte	.LFB7
 1306 0024 0C000000 		.4byte	.LFE7
 1307 0028 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 40


 1308 002c 0C000000 		.4byte	.LFE8
 1309 0030 00000000 		.4byte	.LFB9
 1310 0034 0C000000 		.4byte	.LFE9
 1311 0038 00000000 		.4byte	.LFB10
 1312 003c 0C000000 		.4byte	.LFE10
 1313 0040 00000000 		.4byte	.LFB11
 1314 0044 0C000000 		.4byte	.LFE11
 1315 0048 00000000 		.4byte	.LFB12
 1316 004c 0C000000 		.4byte	.LFE12
 1317 0050 00000000 		.4byte	.LFB13
 1318 0054 0C000000 		.4byte	.LFE13
 1319 0058 00000000 		.4byte	.LFB6
 1320 005c 12000000 		.4byte	.LFE6
 1321 0060 00000000 		.4byte	.LFB1
 1322 0064 64000000 		.4byte	.LFE1
 1323 0068 00000000 		.4byte	.LFB0
 1324 006c 20000000 		.4byte	.LFE0
 1325 0070 00000000 		.4byte	.LFB14
 1326 0074 0C000000 		.4byte	.LFE14
 1327 0078 00000000 		.4byte	.LFB15
 1328 007c 0C000000 		.4byte	.LFE15
 1329 0080 00000000 		.4byte	0
 1330 0084 00000000 		.4byte	0
 1331              		.section	.debug_line,"",%progbits
 1332              	.Ldebug_line0:
 1333 0000 8D010000 		.section	.debug_str,"MS",%progbits,1
 1333      02004B00 
 1333      00000201 
 1333      FB0E0D00 
 1333      01010101 
 1334              	.LASF15:
 1335 0000 72656731 		.ascii	"reg16\000"
 1335      3600
 1336              	.LASF39:
 1337 0006 50574D5F 		.ascii	"PWM_ReadCompare\000"
 1337      52656164 
 1337      436F6D70 
 1337      61726500 
 1338              	.LASF34:
 1339 0016 50574D5F 		.ascii	"PWM_Init\000"
 1339      496E6974 
 1339      00
 1340              	.LASF33:
 1341 001f 50574D5F 		.ascii	"PWM_ClearFIFO\000"
 1341      436C6561 
 1341      72464946 
 1341      4F00
 1342              	.LASF23:
 1343 002d 70657269 		.ascii	"period\000"
 1343      6F6400
 1344              	.LASF38:
 1345 0034 50574D5F 		.ascii	"PWM_Start\000"
 1345      53746172 
 1345      7400
 1346              	.LASF3:
 1347 003e 73686F72 		.ascii	"short unsigned int\000"
 1347      7420756E 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 41


 1347      7369676E 
 1347      65642069 
 1347      6E7400
 1348              	.LASF45:
 1349 0051 443A5C45 		.ascii	"D:\\ESCRITORIO\\Tesis MIB\\Proyecto de Tesis\\elect"
 1349      53435249 
 1349      544F5249 
 1349      4F5C5465 
 1349      73697320 
 1350 0080 726F6573 		.ascii	"roestimulador\\PSoC\\electroestimulador\\Pruebas el"
 1350      74696D75 
 1350      6C61646F 
 1350      725C5053 
 1350      6F435C65 
 1351 00b0 65637472 		.ascii	"ectroestimulador\\prueba Generador Onda Cuadrada.cy"
 1351      6F657374 
 1351      696D756C 
 1351      61646F72 
 1351      5C707275 
 1352 00e2 64736E00 		.ascii	"dsn\000"
 1353              	.LASF32:
 1354 00e6 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1354      52656164 
 1354      43617074 
 1354      75726500 
 1355              	.LASF11:
 1356 00f6 666C6F61 		.ascii	"float\000"
 1356      7400
 1357              	.LASF22:
 1358 00fc 636F756E 		.ascii	"counter\000"
 1358      74657200 
 1359              	.LASF7:
 1360 0104 6C6F6E67 		.ascii	"long long unsigned int\000"
 1360      206C6F6E 
 1360      6720756E 
 1360      7369676E 
 1360      65642069 
 1361              	.LASF1:
 1362 011b 756E7369 		.ascii	"unsigned char\000"
 1362      676E6564 
 1362      20636861 
 1362      7200
 1363              	.LASF14:
 1364 0129 72656738 		.ascii	"reg8\000"
 1364      00
 1365              	.LASF5:
 1366 012e 6C6F6E67 		.ascii	"long unsigned int\000"
 1366      20756E73 
 1366      69676E65 
 1366      6420696E 
 1366      7400
 1367              	.LASF28:
 1368 0140 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1368      52656164 
 1368      436F756E 
 1368      74657200 
 1369              	.LASF9:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 42


 1370 0150 75696E74 		.ascii	"uint8\000"
 1370      3800
 1371              	.LASF31:
 1372 0156 636F6E74 		.ascii	"control\000"
 1372      726F6C00 
 1373              	.LASF12:
 1374 015e 646F7562 		.ascii	"double\000"
 1374      6C6500
 1375              	.LASF24:
 1376 0165 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1376      57726974 
 1376      65436F6D 
 1376      70617265 
 1376      00
 1377              	.LASF10:
 1378 0176 75696E74 		.ascii	"uint16\000"
 1378      313600
 1379              	.LASF47:
 1380 017d 50574D5F 		.ascii	"PWM_initVar\000"
 1380      696E6974 
 1380      56617200 
 1381              	.LASF41:
 1382 0189 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1382      74657243 
 1382      72697469 
 1382      63616C53 
 1382      65637469 
 1383              	.LASF8:
 1384 01a0 756E7369 		.ascii	"unsigned int\000"
 1384      676E6564 
 1384      20696E74 
 1384      00
 1385              	.LASF42:
 1386 01ad 43794578 		.ascii	"CyExitCriticalSection\000"
 1386      69744372 
 1386      69746963 
 1386      616C5365 
 1386      6374696F 
 1387              	.LASF35:
 1388 01c3 72657375 		.ascii	"result\000"
 1388      6C7400
 1389              	.LASF43:
 1390 01ca 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1390      43313120 
 1390      352E342E 
 1390      31203230 
 1390      31363036 
 1391 01fd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1391      20726576 
 1391      6973696F 
 1391      6E203233 
 1391      37373135 
 1392 0230 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1392      66756E63 
 1392      74696F6E 
 1392      2D736563 
 1392      74696F6E 
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 43


 1393              	.LASF21:
 1394 0258 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1394      57726974 
 1394      65506572 
 1394      696F6400 
 1395              	.LASF26:
 1396 0268 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 1396      53657449 
 1396      6E746572 
 1396      72757074 
 1396      4D6F6465 
 1397              	.LASF17:
 1398 027d 73697A65 		.ascii	"sizetype\000"
 1398      74797065 
 1398      00
 1399              	.LASF6:
 1400 0286 6C6F6E67 		.ascii	"long long int\000"
 1400      206C6F6E 
 1400      6720696E 
 1400      7400
 1401              	.LASF27:
 1402 0294 696E7465 		.ascii	"interruptMode\000"
 1402      72727570 
 1402      744D6F64 
 1402      6500
 1403              	.LASF30:
 1404 02a2 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1404      57726974 
 1404      65436F6E 
 1404      74726F6C 
 1404      52656769 
 1405              	.LASF37:
 1406 02bb 50574D5F 		.ascii	"PWM_interruptState\000"
 1406      696E7465 
 1406      72727570 
 1406      74537461 
 1406      746500
 1407              	.LASF40:
 1408 02ce 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1408      52656164 
 1408      50657269 
 1408      6F6400
 1409              	.LASF2:
 1410 02dd 73686F72 		.ascii	"short int\000"
 1410      7420696E 
 1410      7400
 1411              	.LASF20:
 1412 02e7 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1412      57726974 
 1412      65436F75 
 1412      6E746572 
 1412      00
 1413              	.LASF19:
 1414 02f8 50574D5F 		.ascii	"PWM_Stop\000"
 1414      53746F70 
 1414      00
 1415              	.LASF4:
ARM GAS  C:\Users\Jeremias\AppData\Local\Temp\cctvRoLg.s 			page 44


 1416 0301 6C6F6E67 		.ascii	"long int\000"
 1416      20696E74 
 1416      00
 1417              	.LASF13:
 1418 030a 63686172 		.ascii	"char\000"
 1418      00
 1419              	.LASF44:
 1420 030f 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 1420      72617465 
 1420      645F536F 
 1420      75726365 
 1420      5C50536F 
 1421              	.LASF16:
 1422 032c 6C6F6E67 		.ascii	"long double\000"
 1422      20646F75 
 1422      626C6500 
 1423              	.LASF46:
 1424 0338 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1424      52656164 
 1424      436F6E74 
 1424      726F6C52 
 1424      65676973 
 1425              	.LASF0:
 1426 0350 7369676E 		.ascii	"signed char\000"
 1426      65642063 
 1426      68617200 
 1427              	.LASF25:
 1428 035c 636F6D70 		.ascii	"compare\000"
 1428      61726500 
 1429              	.LASF18:
 1430 0364 50574D5F 		.ascii	"PWM_Enable\000"
 1430      456E6162 
 1430      6C6500
 1431              	.LASF29:
 1432 036f 50574D5F 		.ascii	"PWM_ReadStatusRegister\000"
 1432      52656164 
 1432      53746174 
 1432      75735265 
 1432      67697374 
 1433              	.LASF36:
 1434 0386 6374726C 		.ascii	"ctrl\000"
 1434      00
 1435              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
